
/**
.active
Modify a two-state component to represent active state.
**/

/**
.active-hidden
Hide an element when its parent has class <code>active</code>.
**/

.active-hidden.active,
.active > .parent-active-hidden {
	display: none !important;
}


/**
.active-shown
Show an element when its parent has class <code>active</code>.
**/

.active-shown:not(.active) {
	display: none !important;
}

:not(.active) > .parent-active-shown:not(.active) {
	display: none !important;
}


/**
.on
Modify a link or button that references a two-state component to represent
active state.
**/

/* Keep box-shadows for .on over the top of their siblings */
.flex > .on { z-index: 2; }

/**
.on-hidden
Hide an element when its parent has class <code>on</code>.
**/

.on-hidden.on,
.on > .on-hidden {
	display: none !important;
}


/**
.on-shown
Show an element when its parent has class <code>on</code>.
**/

:not(.on) > .on-shown:not(.on) {
	display: none !important;
}


/**
.open-hidden
**/

[open].open-hidden,
[open] > .open-hidden {
	display: none !important;
}

/**
.open-shown
**/

:not([open]) > .open-shown:not([open]) {
	display: none !important;
}


/**
.active-visible
**/

.active-visible {
	opacity: 0;
	visibility: hidden;
	transition:
		opacity 0.4s linear,
		visibility 0.4s linear;
}

.active-visible.active {
	opacity: 1;
	visibility: visible;
	transition:
		opacity 0.2s linear,
		visibility 0.2s linear;
}
