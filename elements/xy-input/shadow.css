
@import '../html.css';
@import '../svg.css';
@import '../control/control.css';

:host {
    display: block;
    padding: 0.3125rem;
    
    /* We rely on maintaining the height of the SVG via viewbox to determine the
       height of the grid row. Safari has a bad habit of making 100% and 1fr 
       bigger than they should be (seemingly ignoring padding top/bottom), which
       causes the labels to render too low. */
    grid-template-columns: 1fr;
    grid-template-rows: min-content;

    /** --line-color **/
    /** --line-color-x **/
    /** --line-color-y **/
    --line-color: #cccccc;
    --line-color-x: var(--line-color);
    --line-color-y: var(--line-color);

    /** --plot-color **/
    --plot-color: #00bb55;

    --track-background: #01181e;
    --track-radius: 0.1875rem;
    --track-shadow: inset 0 0 90px hsla(192, 94%, 6%, 0.16875),
        0 1px 1px hsla(192, 18%, 64%, 0.15),
        0 -1px 1px hsla(192, 60%, 8%, 0.4);
    --handle-stroke-width: 1px;

    min-height: 7.5rem;
    margin-bottom: 1.25rem;

    background: #f6f6f6;
    border: 1px solid #cccccc;
    border-radius: var(--track-radius);
    box-shadow: var(--track-shadow);
    
    box-sizing: border-box;
    position: relative;
}

:host > canvas {
    pointer-events: none;
    grid-column: 1;
    grid-row: 1;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: auto;
    margin: 0;
}

:host > svg {
    grid-column: 1;
    grid-row: 1;

    /* For some reason aligning to anything other than start causes the SVG to
       render too low down in Safari. */
    align-self: stretch;
    /* Height must be auto (100% too big in Safari) and controlled by viewbox
       to cover the area else shapes inside are not clickable. */
    height: auto;

    justify-self: stretch;
    width: 100%;
    
    overflow: visible;
    position: relative;
    z-index: 2;
    transform: translate3d(0,0,0);
}

:host > svg > circle {
    z-index: 2;
    transform: translate3d(0,0,0);
}

:host > [part="x-tick tick"],
:host > [part="y-tick tick"] {
    position: absolute;
    left: 6px;
    bottom: 6px;
}

[part="x-line line"],
[part="y-line line"] {
    stroke: #cccccc;
}

[part="x-tick tick"],
[part="y-tick tick"] {
    grid-column: 1;
    grid-row: 1;
    align-self: end;
    justify-self: start;
    margin: 0;
    font-size: inherit !important;
    line-height: 1em;
    height: auto;
    color: #888888;
    white-space: nowrap;
}

[part="x-tick tick"] {
    text-align: center;
}

[part="y-tick tick"] {
    text-align: right;
    min-width: 2em;
}

[part="x-tick tick"] > span,
[part="y-tick tick"] > span {
    font-size: 0.625em;
    font-family: 'Fira Mono', monospace;
}

[part="handle"] {
    fill: url(#handle-gradient);
    stroke: inherit;
    stroke-width: var(--handle-stroke-width);
    cursor: pointer;
}

.envelope-svg {
    background: var(--track-background);
    background-size: auto 100%;
    background-position: bottom left;
    box-shadow: var(--track-shadow);
    border-radius: var(--track-radius);
}

.control-point {
    fill: url(#handle-gradient);
    stroke: inherit;
    stroke-width: var(--handle-stroke-width);
}

.control-line {
    stroke: inherit;
    stroke-width: 3;
}

.thin-control-line {
    display: none;
    stroke-width: 1;
    stroke-dasharray: 1 2;
}

.control {
    stroke: #01181e;
}

.control:focus {
    stroke: hsl(165, 31%, 53%);
    outline: none;
}

.control:focus > .thin-control-line {
    display: block;
}


/* Gradient stops */

.stop-1 {
    stop-color: hsla(192,0%,96.8%,0.8);
}

.stop-2 {
    stop-color: hsla(192,0%,55%,0.8);
}

:host(:focus) .stop-1 { stop-color: hsl(192,0%,96.8%); }
:host(:focus) .stop-2 { stop-color: hsl(192,0%,55%); }
