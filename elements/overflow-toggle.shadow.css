
@import '../css/html.css';

:host {
    display: flex !important;
    /* Up to down */
    flex-direction: column;
    /* X direction */
    align-items: stretch;
    /* Y direction */
    justify-content: start;

    font-size: inherit;
    line-height: inherit;
    transition: max-height 0.5s cubic-bezier(0, 0.28, 0.72, 1);

    /* Default max-height */
    max-height: 7.5rem;
    --overflow: 1rem;
}

:host > slot {
    /* Cannot grow bigger but can shrink smaller than its auto size */
    flex: 0 1 auto;

    display: block;
    min-height: 0;
    font-size: inherit;
    line-height: inherit;

    /* Support content being set in a grid (via ::part(content) { display: grid; }) 
       by inheriting grid rules set on host. */
    grid: inherit;
    justify-content: inherit;
    justify-items: inherit;
    align-content: inherit;
    align-items: inherit;
    column-gap: inherit;
    row-gap: inherit;

    /* Won't work – multiline text, innit – but we can always dream */
    text-overflow: ellipsis;
    overflow: hidden;

    margin-top: calc(-1 * var(--overflow));
    margin-left: calc(-1 * var(--overflow));
    margin-right: calc(-1 * var(--overflow));
    margin-bottom: 0;
    padding-top: var(--overflow);
    padding-left: var(--overflow);
    padding-right: var(--overflow);
    padding-bottom: 0;
    
    transition:
        margin-bottom 0.5s linear,
        padding-bottom 0.5s linear;
}

:host([open]) > slot {
    /* Allow overflow while open */
    margin-bottom: calc(-1 * var(--overflow));
    padding-bottom: var(--overflow);
}

:host > [part="button"] {
    /* Maintains its auto size */
    flex: 0 0 auto;

    display: block;
    margin-left: auto;
    margin-right: auto;
    padding-left: 2rem;
    padding-right: 2rem;
    padding-top: 0.375rem;
    padding-bottom: 0.375rem;
    font-size: 1rem;
    line-height: inherit;
    background-color: white;
    border: 1px solid currentcolor;
    border-radius: 4rem;
    margin-top: 1rem;
    margin-bottom: 1rem;
}

:host > [part="button"]:focus {
    outline-width: 0;
    border-color: var(--focus-border-color);
    box-shadow: var(--focus-shadow);
}
