
/**
rotary-control

```html
<rotary-control max="3" ticks="0 0.5 1 1.5 2 3" transform="cubic" unit="s">Rotary</rotary-control>
```
**/

:host {
    /** --touch-range **/
    --touch-range: 15rem;

    --track-width:  calc(var(--handle-width) + 0.25rem);
    --track-shadow: inset 0 0.0625rem 0.25rem rgba(0,0,0,0.2);

    /** --touch-range **/
    --handle-width: 3rem;
    --handle-background: white;
    --handle-border: 1px solid rgb(187, 187, 187);
    --handle-shadow: 0 0.1875rem 0.375rem 0 rgba(0,0,0,0.2);

    --label-font-size: 1em;
    --label-line-height: 1.2em;
    --label-letter-spacing: -0.04em;
    --label-color: black;
    --label-shadow: none;

    --output-font-size: 0.75rem;
    --output-line-height: 1rem;
    --output-letter-spacing: -0.04em;
    --output-color: #46789a;
    --output-shadow: none;

    --dot-width: 0.25rem;
    --dot-height: var(--dot-width);
    --dot-distance: 1.125rem;
    --dot-background: #46789a;
    --dot-border: none;
    --dot-shadow: none;

    --rotation-start: 30deg;
    --rotation-range: 300deg;

    --tick-width: 0.1875rem;
    --tick-height: var(--tick-width);
    --tick-distance: 1.75rem;
    --tick-color: black;
    --tick-background: var(--tick-color);
    --tick-border: none;
    --tick-border-radius: 50%;
    --tick-line-height: 0.75rem;
    --tick-shadow: none;
    --tick-font-size: 0.5625rem;
    --tick-line-height: 0.75rem;
    --tick-letter-spacing: -0.0125em;
    --tick-text-shadow: none;

    position: relative;
    display: grid;
    grid-template-areas:
        'handle handle'
        'label plugs';
    grid-template-columns: 1fr min-content;
    grid-template-rows: calc(2 * var(--tick-distance) + 2 * var(--tick-width) + 2 * var(--tick-line-height)) min-content;
    align-items: center;
    justify-items: center;
    align-content: start;
    justify-content: center;
    width: calc(2 * var(--tick-distance) + 2 * var(--tick-width) + 2 * var(--tick-line-height));
}

:host * {
    box-sizing: border-box;
}

:host(:focus) {
    --label-color: #46789a;
    --output-color: white;
    --handle-background: #46789a;
    --dot-background: white;
    --tick-color: #46789a;
    --tick-background: #46789a;
}

:host > * {
    margin: 0;
}

:host::before {
    content: '';
    grid-area: handle;
    position: absolute;
    left: calc(50% - 0.5 * var(--track-width));
    top:  calc(50% - 0.5 * var(--track-width));

    width: var(--track-width);
    height: var(--track-width);
    box-shadow: var(--track-shadow);
    border-radius: 50%;
    z-index: 0;
}

:host::after {
    content: '';
    grid-area: handle;
    position: absolute;
    left: calc(50% - 0.5 * var(--handle-width));
    top:  calc(50% - 0.5 * var(--handle-width));

    width: var(--handle-width);
    height: var(--handle-width);
    box-shadow: var(--handle-shadow);
    border-radius: 50%;
    z-index: 0;
}

:host > .knob {
    grid-area: handle;
    position: absolute;
    left: calc(50% - 0.5 * var(--handle-width));
    top:  calc(50% - 0.5 * var(--handle-width));
    z-index: 2;
}

:host > .tick {
    grid-area: handle;
    position: absolute;
    left: 50%;
    top:  50%;
    margin: 0;
    outline-width: 0;
}

:host > .control-label {
    grid-area: label;
    text-align: center;
}

:host > output {
    grid-area: handle;
    pointer-events: none;
    z-index: 2;
}


/* label */

label {
    align-self: start;
    font-size: var(--label-font-size);
    line-height: var(--label-line-height);
    letter-spacing: var(--label-letter-spacing);
    color: var(--label-color);
}


/* output */

output {
    font-family: 'Fira Mono', 'Andale Mono', monospace;
    font-size: var(--output-font-size, 0.75rem);
    line-height: var(--output-line-height);
    letter-spacing: var(--output-letter-spacing);
    width: var(--handle-width);
    height: auto;
    text-align: center;
    white-space: pre;
    color: var(--output-color);
}

output > abbr {
    font-size: 0.8em;
    margin-left: 0.125em;
    vertical-align: baseline;
}


/* knob */

.knob {
    cursor: pointer;
    width: var(--handle-width);
    height: var(--handle-width);
    background: var(--handle-background);
    border: var(--handle-border);
    border-radius: 50%;
    transform: rotate3d(0, 0, 1, calc(var(--rotation-start) + var(--unit-value) * var(--rotation-range)));

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version */
}

.knob::after {
    content: '';
    position: absolute;
    width: var(--dot-width);
    height: var(--dot-height);
    left: 50%;
    top: calc(50% + var(--dot-distance));
    transform: translate3d(-50%, 0, 0);
    border-radius: 50%;
    background-color: var(--dot-background);
    border: var(--dot-border);
    box-shadow: var(--dot-shadow);
}


/* tick */

.tick {
    cursor: pointer;
    display: block;
    padding: 0;
    padding-top: var(--tick-height);
    width: var(--tick-width);
    height: var(--tick-height);
    font-size: var(--tick-font-size);
    line-height: var(--tick-line-height);
    letter-spacing: var(--tick-letter-spacing);
    text-shadow: var(--tick-text-shadow);
    background: var(--tick-background);
    border: var(--tick-border);
    border-radius: var(--tick-border-radius);
    color: var(--tick-color);
    overflow: visible;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version */
}

.tick::after {
    content: none;
}

.tick > span {
    /* Required for transform */
    display: inline-block;
    width: auto;

    /* Register the start of the text right in the centre of the tick so that
       when it is transformed back it is perfectly centred. */
    margin-left: 50%;
    transform-origin: 50% 50%;
}
