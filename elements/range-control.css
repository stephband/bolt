
/**
range-control

```html
<range-control min="0" max="1" value="0.5" ticks="0 0.25 0.5 0.75 1" unit="s">Range</range-control>
```
**/

:host {
    --normal-color: hsl(192, 96%, 6%);
    --active-color: hsl(201, 40%, 58%);
    --active-color-muted: hsl(201, 24%, 43%);
    --output-color: hsl(201, 31%, 50%);
    --hover-color: #969ea2;
    --focus-text-color: hsl(201, 21%, 53%);
    --focus-color: hsl(165, 31%, 53%);

    --track-height: 0.1875rem;
    --track-background: currentcolor;
    --track-border: none;
    --track-shadow: none;
    --track-top: 1rem;

    --handle-width: 1.375rem;
    --handle-height: var(--handle-width);
    --handle-border: 0.1875rem solid currentcolor;
    --handle-background: #B6B2B0 linear-gradient(hsl(192,0%,96.8%), hsl(192,0%,55%));
    --handle-shadow: inset 0 0 5px 1px hsla(198,30%,20%,0.6);

    --tick-width: 0.125rem;
    --tick-height: var(--tick-width);
    --tick-border: none;
    --tick-background: currentcolor;
    --tick-shadow: none;
    --tick-font-size: 0.5625rem;
    --tick-line-height: 0.9375rem;
    --tick-letter-spacing: -0.0125em;
    --tick-text-shadow: none;

    --handle-shadow-focus: inset 0 0 3px 1px hsla(192,77%,12%,0.63);
    --handle-background-focus: linear-gradient(hsl(192,40%,96.8%), hsl(165,24%,55%));

    --bleed: 0.1875rem;

    position: relative;
    display: grid;
    grid-template-areas:
        'label output plugs'
        'input input input';
    grid-template-columns: 4fr 6fr min-content;
    grid-template-rows:
        min-content
        minmax(1.5rem, min-content);
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: space-between;
    /*max-width: 25rem;*/
    padding: 0;
    /*overflow: hidden;*/
    color: var(--normal-color);
}

:host > * {
    margin: 0;
}

:host > .control-output {
    grid-area: output;
    order: 1;
    margin-left: auto;
    width: auto;
    font-size: 0.8125rem;
    text-align: right;
    position: relative;
    top: 2px;
}

:host > .control-value {
    grid-area: input;
    position: absolute;
    top: 0;
    font-size: 18px;
    text-align: center;
    line-height: var(--handle-height);
    width: var(--handle-width);
    margin-left: calc(-0.5 * var(--handle-width));
    color: white;
    overflow: visible;
    z-index: 1;
    margin-top: calc(var(--track-top) + 0.5 * (23px - var(--handle-height)));
    pointer-events: none;
    background: transparent;
}

:host > .control-input {
    grid-area: input;
    align-self: end;

    /* Make the range input slightly wider than the control
       to allow range thumb to line up with label text */
    width: calc(100% + 2 * var(--bleed));
    margin-left: calc(-1 * var(--bleed));
    margin-right: calc(-1 * var(--bleed));
    margin-top: var(--track-top);
    z-index: 1;
}

:host > .tick-input {
    /* Hide tick input behind range control-input where it can do no harm. */
    grid-area: input;
    z-index: 0;
    opacity: 0;
}

:host > .tick-label {
    grid-area: input;
    position: relative;

    /* Use margin to centre labels, not transform: translate, which has the
       side effect of blurring the text on pixel screens. */
    margin-left: -0.6875rem;
    /*margin-top: calc(-1 * var(--tick-line-height));*/
    width: 1.375rem;
    z-index: 0;
    align-self: start;
}

:host > span {
    grid-area: input;
    background-color: yellow;
}

:host > ::slotted([slot="plugs"]) {
    /* Style slotted content. This is overidden by external CSS. */
    grid-area: plugs;
    position: relative;
    margin-left: 9px;
    align-self: end;
    line-height: 15px;
    top: 1px;
}



/* Range inputs */

[type="range"] {
    -webkit-appearance: none !important;
    background-color: transparent;
    border-width: 0;

    /* For IE height should be big enough to accomodate the thumb. */
    height: 1.4375rem;

    /*required for proper track sizing in FF*/
    width: 100%;
    color: inherit;
}

/* [type="range"] track */

[type="range"]::-webkit-slider-runnable-track {
    height: var(--track-height);
    background: var(--track-background);
    border: var(--track-border);

    /* Rounded ends. For some reason specifiying this in rems destroys the
       effect at this small scale. */
    /*border-top-left-radius: 2px 1.5px;
    border-bottom-left-radius: 2px 1.5px;
    border-top-right-radius: 2px 1.5px;
    border-bottom-right-radius: 2px 1.5px;*/
    border-radius: calc(0.5 * var(--track-height));

    /* Subtle shading around track to give embossed effect */
    box-shadow: var(--track-shadow);
}

[type="range"]::-moz-range-track {
    height: var(--track-height);
    background: var(--track-background);
    border: var(--track-border);
    border-radius: calc(0.5 * var(--track-height));
    box-shadow: var(--track-shadow);
}

[type="range"]::-moz-range-progress {
    height: var(--track-height);
    background: var(--track-background);
    border-radius: calc(0.5 * var(--track-height));
    box-shadow: var(--track-shadow);
}

[type=range]::-ms-track {
    height: var(--track-height);
    border: var(--track-border);
    border-radius: calc(0.5 * var(--track-height));

    /* Remove bg colour from the track and use ms-fill-lower and
       ms-fill-upper instead */
    background: transparent;

    /* Remove default tick marks */
    color: transparent;
}

[type=range]::-ms-fill-lower {
    background: var(--track-background);
    border-radius: calc(0.5 * var(--track-height));
    box-shadow: var(--track-shadow);
}

[type=range]::-ms-fill-upper {
    background: var(--track-background);
    border-radius: calc(0.5 * var(--track-height));
    box-shadow: var(--track-shadow);
}

/* [type="range"] thumb */

[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none !important;

    cursor: pointer;
    width:  var(--handle-width);
    height: var(--handle-height);

    /* Centre it vertically on the track */
    transform: translate3d(0, calc(0.5 * (var(--track-height) - var(--handle-height))), 0);
    box-sizing: border-box;

    /* Use a border to create a larger hit zone for the thumb */
    border-radius: 50%;
    border: var(--handle-border);

    /* Constrain background image */
    background-clip: content-box;
    background-origin: padding-box;
    background: var(--handle-background);

    /* Shadow */
    box-shadow: var(--handle-shadow);
}

[type="range"]:focus::-webkit-slider-thumb {
    border: var(--handle-border-focus);
    background: var(--handle-background-focus);
    box-shadow: var(--handle-shadow-focus);
}

[type="range"]::-moz-range-thumb {
    cursor: pointer;
    width:  var(--handle-width);
    height: var(--handle-width);

    /* Increase the size of the hit zone to support fat fingers. */
    outline: 0.25rem solid transparent;

    margin-top: -4px;

    /* Use a border to create a larger hit zone for the thumb */
    border-radius: 50%;
    border: var(--handle-border);

    /* Constrain background image */
    background-clip: content-box;
    background-origin: padding-box;
    background: var(--handle-background);

    /* Shadow */
    box-shadow: var(--handle-shadow);
}

[type="range"]:focus::-moz-range-thumb {
    border: var(--handle-border-focus);
    background: var(--handle-background-focus);
    box-shadow: var(--handle-shadow-focus);
}


[type="range"]::-ms-thumb {
    cursor: pointer;
    width:  var(--handle-width);
    height: var(--handle-width);

    margin-top: 1px;

    /* Use a border to create a larger hit zone for the thumb */
    border-radius: 50%;
    border: var(--handle-border);

    /* Constrain background image */
    background-clip: content-box;
    background-origin: padding-box;
    background: var(--handle-background);

    /* Shadow */
    box-shadow: var(--handle-shadow);
}

[type="range"]:focus::-ms-thumb {
    border: var(--handle-border-focus);
    background: var(--handle-background-focus);
    box-shadow: var(--handle-shadow-focus);
}


/* [type="range"] focus */

[type="range"]:focus {
    color: var(--focus-color);
    outline: none;
    outline-width: 0 !important;
}

[type="range"]::-moz-focus-outer {
    /* Get rid of that annoying border in FF */
    border: 0;
}

[type="range"]:-moz-focusring {
    outline: 0 solid transparent;
}


/* Ticks */

.tick-label {
    cursor: pointer;

    /* Center content, even if it's wider than the label */
    display: block;

    font-size: var(--tick-font-size);
    line-height: var(--tick-line-height);
    letter-spacing: var(--tick-letter-spacing);
    text-shadow: var(--tick-text-shadow);
    text-align: center;

    /*margin-top: 7px;*/

    /* Make ::after mark visible outside label*/
    overflow: visible;
    color: inherit;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none; /* Non-prefixed version, currently
                                    supported by Chrome and Opera */
}

.tick-label::after {
    content: '';

    display: block;
    width: var(--tick-width);
    height: var(--tick-height);
    margin-left: auto;
    margin-right: auto;

    border: var(--tick-border);
    background: var(--tick-background);
    box-shadow: var(--tick-shadow);
    border-radius: calc(0.5 * min(var(--tick-width), var(--tick-height)));
}

.tick-label:hover {
    color: var(--focus-text-color);
}

.tick-label:focus {
    color: var(--focus-color);
}

.tick-label:focus::after {
    border: var(--tick-border-focus);
    background: var(--tick-background-focus);
    box-shadow: var(--tick-shadow-focus);
}

.tick-input:checked + .tick-label {
    color: var(--focus-color);
}


/* Label */

.control-label {
    align-self: end;
    font-size: 14px;
    line-height: 15px;
    color: var(--output-color);
}


/* Value display */

.control-output {
    align-self: end;
    font-family: 'Fira Mono', 'Andale Mono', monospace;
    font-size: 0.6875rem;
    line-height: 0.9375rem;
    /* Doesnt seem to want to respect 15px auto height. Force. */
    height: 0.9375rem;
    white-space: pre;
    color: #969ea2;
    color: #4C565C;
    color: var(--output-color);
}

.control-output > abbr {
    font-size: 0.8em;
    margin-left: 0.125rem;
    vertical-align: baseline;
}

/*
.control-output.changing {
    color: #72B8A9 !important;
    transition: color 0ms linear;
}
*/


/* Range input */

.control-input:focus ~ .control-label {
    color: var(--output-color);
}

.control-input:focus ~ .control-output {
    color: var(--active-color);
}

.control-input:focus ~ .tick-label {
    color: var(--focus-text-color);
}

.control-input:focus ~ .tick-label::after {
    color: var(--active-color-muted);
}

.control-input:focus ~ .tick-input:checked + .tick-label {
    color: var(--focus-color);
}

output > abbr {
    display: inline-block;
    margin-left: 0.1em;
    vertical-align: baseline;
}
