/*
Utilities

Styleguide: zutilities
*/


/*
Transition

.notransition - cancels transitions on an element (and any slide, tab, pop,
layer or tip descendents).

Styleguide: zutilities.transition
*/

.notransition,
.notransition .slide,
.notransition .tab,
.notransition .popdown,
.notransition .dropdown,
.notransition .layer,
.notransition .tip {
	-webkit-transition: none !important;
	   -moz-transition: none !important;
	     -o-transition: all 0 linear 0 !important;
	        transition: none !important;
}


/*
Modify

.on        - Added via JS to links or labels that reference the <code>id</code> of an element that is activated
.active    - Added via JS to an element like a <code>toggle</code> or <code>slide</code> when activated
.hidden    - Hides element
.masked    - Hides element visually and removes it from the flow without using <code>display: none;</code>
.disabled  - Dims element
.requested - Uses <code>::after</code> content to overlay a loading animation

Styleguide: zutilities.modify
*/

.hidden {
	display: none !important;
}

.on > .on-hidden {
	display: none !important;
}

:not(.on) > .on-shown {
	display: none !important;
}

.masked {
	position: absolute !important;
	opacity: 0 !important;
	width: 0 !important;
	height: 0 !important;
}

.disabled,
.js input.disabled {
	opacity: 0.4;
}

.js .requested::after {
	content: '';
	position: absolute;
	left: 50%;
	top: 50%;
	margin-left: -1.25rem;
	margin-top: -1.25rem;
	height: 1.875rem;
	width: 1.875rem;
	opacity: 1;

	-webkit-animation: rotation 1000ms infinite linear;
	        animation: rotation 1000ms infinite linear;

	border:     0.3125rem solid rgba(63, 63, 63, 0.15);
	border-top: 0.3125rem solid rgba(63, 63, 63, 1);
	border-radius: 100%;
	z-index: 100;
}

@-webkit-keyframes rotation {
	from {-webkit-transform: rotate(0deg);}
	to {-webkit-transform: rotate(359deg);}
}

@keyframes rotation {
	from {transform: rotate(0deg);}
	to {transform: rotate(359deg);}
}

.clear::after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}

.fixed {
	position: fixed !important;
}

/*
Position

.tl             - position absolutely at the top left.
.tr             - position absolutely at the top right.
.bl             - position absolutely at the bottom left.
.br             - position absolutely at the bottom right.
.top-align      - vertical align to top.
.middle-align   - vertical align to middle.
.bottom-align   - vertical align to bottom.
.baseline-align - vertical align to baseline.
.left           - float left.
.right          - float right.
.left-align      - text align left.
.justify-align   - text align justify.
.center-align    - text align center.
.right-align     - text align right.

Styleguide: zutilities.position
*/

.tl, .tr, .bl, .br { position: absolute; }
.tl, .tr { top: 0; }
.bl, .br { bottom: 0; }
.tl, .bl { left: 0; }
.tr, .br { right: 0; }

.left { float: left; clear: left; }
.right { float: right; clear: right; }

.top-align      { vertical-align: top !important; }
.bottom-align   { vertical-align: bottom !important; }
.middle-align   { vertical-align: middle !important; }
.baseline-align { vertical-align: baseline !important; }

.left-align     { text-align: left !important; }
.right-align    { text-align: right !important; }
.center-align   { text-align: center !important; }
.justify-align  { text-align: justify !important; }


/*
Scroll

.scroll         - Sets <code>overflow: auto;</code> and forces display of
                  scrollbars when scrollable.
.scroll-hidden  - Force hides scrollbars where possible (Chrome, Safari, Opera).

Styleguide: zutilities.scroll
*/

.scroll {
	overflow: auto;
	/* Enable momentum scrolling. Unfortunately this is buggy. It doesn't
	   update the custom scrollbar during the momentum ease-out. Also, some
	   children get rendered improperly.

	   Actually, it seems to have improved in iOS 6. */
	-webkit-overflow-scrolling: touch;
}

.scroll > * {
	/* Fixes iOS child rendering scrolling bug. Maybe.
	   http://stackoverflow.com/questions/7808110/css3-property-webkit-overflow-scrollingtouch-error */
	-webkit-transform: translateZ(0px);
}

.scroll::-webkit-scrollbar {
	/* Force scrollbars to display in mobile WebKit devices. For a demo
	   of scrollbar configurations:
	   http://trac.webkit.org/export/41842/trunk/LayoutTests/scrollbars/overflow-scrollbar-combinations.html
	*/
	width: 9px;
	height: 9px;
	background-color: transparent;
	-webkit-border-radius: 12px;
	        border-radius: 12px;
}

.scroll-hidden::-webkit-scrollbar {
	display: none;
}

.scroll::-webkit-scrollbar-thumb:vertical,
.scroll::-webkit-scrollbar-thumb:horizontal {
	/* Approximate the style of the iPad's default scrollbars. (Can
	   probably do better, but this is quick). */
	background-color: #888888;
	border: 2px solid white;

	-webkit-border-radius: 12px;
	        border-radius: 12px;
}

.scroll::-webkit-scrollbar-thumb:vertical {
	min-height: 20px;
}

.scroll::-webkit-scrollbar-thumb:horizontal {
	min-width: 20px;
}

.scroll::-webkit-scrollbar-track-piece:disabled,
.scroll::-webkit-scrollbar-button:disabled {
	display: none !important;
}

.x-scroll { overflow-y: hidden; }
.y-scroll { overflow-x: hidden; }
.no-scroll { overflow: hidden; }
