
/**
Grid

```html
<div class="3-grid grid">
	<p class="x-3 y-3 x-atretch blue-bg">3,3</p>
	<p class="x-1 y-1 x-start blue-bg">1,3</p>
	<p class="x-2 y-2 x-end blue-bg">2,3</p>
	<p class="x-1 y-3 x-stretch lime-bg">1,3</p>
	<p class="x-2 y-3 x-stretch yellow-bg">2,3</p>
</div>
```

<div class="3-grid grid">
	<p class="x-3 y-3 x-atretch blue-bg">3,3</p>
	<p class="x-1 y-1 x-start blue-bg">1,3</p>
	<p class="x-2 y-2 x-end blue-bg">2,3</p>
	<p class="x-1 y-3 x-stretch lime-bg">1,3</p>
	<p class="x-2 y-3 x-stretch yellow-bg">2,3</p>
</div>
**/

// $breakpoints: prefix, min-width, grid count, gutter, space
$breakpoints:
	''      0em  6 1.5em 1.5em,
	'\\@1-' 50em 6 1.5em 1.5em,
	'\\@2-' 70em 9 2.8125em 1.875em,
	'\\@3-' 90em 9 3.75em 1.875em !default;

:root {
	/**
	--column-gap
	Define the horizontal grid gap.
	**/
	--column-gap: 1.5em;

	/**
	--row-gap
	Define the vertical grid gap.
	**/
	--row-gap: 1.5em;
}

/**
.grid
Applies `display: grid`.
**/

.grid           {
	display: grid !important;
	grid-column-gap: 1.875rem;
	grid-row-gap: 1.875rem;
}


/**
.2-grid
Applies a grid template of 2 equal columns.
**/

/**
.3-grid
Applies a grid template of 3 equal columns.
**/

/**
.4-grid
Applies a grid template of 4 equal columns.
**/

/**
.5-grid
Applies a grid template of 5 equal columns.
**/

/**
.6-grid
Applies a grid template of 6 equal columns.
**/

.\32 -grid         { grid-template-columns: repeat(2, 1fr); }
.\33 -grid         { grid-template-columns: repeat(3, 1fr); }
.\34 -grid         { grid-template-columns: repeat(4, 1fr); }
.\35 -grid         { grid-template-columns: repeat(5, 1fr); }
.\36 -grid         { grid-template-columns: repeat(6, 1fr); }
.\37 -grid         { grid-template-columns: repeat(7, 1fr); }
.\38 -grid         { grid-template-columns: repeat(8, 1fr); }
.\39 -grid         { grid-template-columns: repeat(9, 1fr); }
.\31 0-grid        { grid-template-columns: repeat(10, 1fr); }
.\31 1-grid        { grid-template-columns: repeat(11, 1fr); }
.\31 2-grid        { grid-template-columns: repeat(12, 1fr); }

/**
.x-1
Places a grid child at column 1.
**/

/**
.x-2
Places a grid child at column 2.
**/

/**
.x-3
Places a grid child at column 3.
**/

.x-1            { grid-column-start: 1 !important; }
.x-2            { grid-column-start: 2 !important; }
.x-3            { grid-column-start: 3 !important; }
.x-4            { grid-column-start: 4 !important; }
.x-5            { grid-column-start: 5 !important; }
.x-6            { grid-column-start: 6 !important; }
.x-7            { grid-column-start: 7 !important; }
.x-8            { grid-column-start: 8 !important; }
.x-9            { grid-column-start: 9 !important; }
.x-10           { grid-column-start: 10 !important; }
.x-11           { grid-column-start: 11 !important; }
.x-12           { grid-column-start: 12 !important; }

/**
.xspan-1
Makes a grid child span 1 columns.
**/

/**
.xspan-2
Makes a grid child span 2 columns.
**/

/**
.xspan-3
Makes a grid child span 3 columns.
**/

.xspan-1       { grid-column-end: span 1 !important; }
.xspan-2       { grid-column-end: span 2 !important; }
.xspan-3       { grid-column-end: span 3 !important; }
.xspan-4       { grid-column-end: span 4 !important; }
.xspan-5       { grid-column-end: span 5 !important; }
.xspan-6       { grid-column-end: span 6 !important; }
.xspan-7       { grid-column-end: span 7 !important; }
.xspan-8       { grid-column-end: span 8 !important; }
.xspan-9       { grid-column-end: span 9 !important; }
.xspan-10      { grid-column-end: span 10 !important; }
.xspan-11      { grid-column-end: span 11 !important; }
.xspan-12      { grid-column-end: span 12 !important; }
.xspan--1      { grid-column-end: span -1 !important; }

/**
.x-start
Justifies a grid child to the start of a grid cell.
**/

.x-end          { justify-self: end !important; }

/**
.x-end
Justifies a grid child to the end of a grid cell.
**/

.x-start        { justify-self: start !important; }

/**
.x-center
Justifies a grid child to the center of a grid cell.
**/

.x-center       { justify-self: center !important; }

/**
.x-stretch
Justifies a grid child to fill a grid cell.
**/

.x-stretch      { justify-self: stretch !important; }

/**
.x-bleed
Justifies a grid child to fill a grid cell plus half of the grid-gap on
each side.
**/

.x-bleed {
	justify-self: stretch !important;
	margin-left: calc(var(--column-gap) / -2);
	margin-right: calc(var(--column-gap) / -2);
	width: calc(100% + var(--column-gap));
}

/**
.y-1
Places a grid child at row 1.
**/

/**
.y-2
Places a grid child at row 2.
**/

/**
.y-3
Places a grid child at row 3.
**/

.y-1            { grid-row-start: 1 !important; }
.y-2            { grid-row-start: 2 !important; }
.y-3            { grid-row-start: 3 !important; }
.y-4            { grid-row-start: 4 !important; }
.y-5            { grid-row-start: 5 !important; }
.y-6            { grid-row-start: 6 !important; }
.y-7            { grid-row-start: 7 !important; }
.y-8            { grid-row-start: 8 !important; }
.y-9            { grid-row-start: 9 !important; }
.y-10           { grid-row-start: 10 !important; }
.y-11           { grid-row-start: 11 !important; }
.y-12           { grid-row-start: 12 !important; }
.y-13           { grid-row-start: 13 !important; }
.y-14           { grid-row-start: 14 !important; }
.y-15           { grid-row-start: 15 !important; }
.y-16           { grid-row-start: 16 !important; }
.y-17           { grid-row-start: 17 !important; }
.y-18           { grid-row-start: 18 !important; }

/**
.yspan-1
Makes a grid child span 1 rows.
**/

/**
.yspan-2
Makes a grid child span 2 rows.
**/

/**
.yspan-3
Makes a grid child span 3 rows.
**/

.yspan-1       { grid-row-end: span 1 !important; }
.yspan-2       { grid-row-end: span 2 !important; }
.yspan-3       { grid-row-end: span 3 !important; }
.yspan-4       { grid-row-end: span 4 !important; }
.yspan-5       { grid-row-end: span 5 !important; }
.yspan-6       { grid-row-end: span 6 !important; }
.yspan-7       { grid-row-end: span 7 !important; }
.yspan-8       { grid-row-end: span 8 !important; }
.yspan-9       { grid-row-end: span 9 !important; }
.yspan-10      { grid-row-end: span 10 !important; }
.yspan-11      { grid-row-end: span 11 !important; }
.yspan-12      { grid-row-end: span 12 !important; }
.yspan--1      { grid-row-end: span -1 !important; }

/**
.x-start
Aligns a grid child to the start of a grid cell.
**/

.y-start        { align-self: start !important; }

/**
.y-end
Aligns a grid child to the end of a grid cell.
**/
.y-end          { align-self: end !important; }

/**
.y-center
Aligns a grid child to the center of a grid cell.
**/

.y-center       { align-self: center !important; }

/**
.y-stretch
Aligns a grid child to fill a grid cell.
**/

.y-stretch      { align-self: stretch !important; }

/**
.y-baseline
Aligns a grid child to the baseline of a grid cell.
**/

.y-baseline     { align-self: baseline !important; }

.columns-2      { columns: 2 !important; }
.columns-3      { columns: 3 !important; }
.columns-4      { columns: 4 !important; }
.columns-5      { columns: 5 !important; }
.columns-6      { columns: 6 !important; }
.columns-7      { columns: 7 !important; }
.columns-8      { columns: 8 !important; }
.columns-9      { columns: 9 !important; }
.columns-10     { columns: 10 !important; }
.columns-11     { columns: 11 !important; }
.columns-12     { columns: 12 !important; }

@each $breakpoint in $breakpoints {
	:root       {
		--column-gap: #{nth($breakpoint, 4)};
		--row-gap: #{nth($breakpoint, 5)};
	}

	@media screen and (min-width: #{nth($breakpoint, 2)}) {
        .#{nth($breakpoint, 1)}grid           { display: grid !important; column-gap: var(--column-gap); row-gap: var(--row-gap); }
        .#{nth($breakpoint, 1)}\32 -grid         { grid-template-columns: repeat(2, calc((100% / 2) - (var(--column-gap) * 1 / 2))); }
        .#{nth($breakpoint, 1)}\33 -grid         { grid-template-columns: repeat(3, calc((100% / 3) - (var(--column-gap) * 2 / 3))); }
        .#{nth($breakpoint, 1)}\34 -grid         { grid-template-columns: repeat(4, calc((100% / 4) - (var(--column-gap) * 3 / 4))); }
        .#{nth($breakpoint, 1)}\35 -grid         { grid-template-columns: repeat(5, calc((100% / 5) - (var(--column-gap) * 4 / 5))); }
        .#{nth($breakpoint, 1)}\36 -grid         { grid-template-columns: repeat(6, calc((100% / 6) - (var(--column-gap) * 5 / 6))); }
        .#{nth($breakpoint, 1)}\37 -grid         { grid-template-columns: repeat(7, calc((100% / 7) - (var(--column-gap) * 6 / 7))); }
        .#{nth($breakpoint, 1)}\38 -grid         { grid-template-columns: repeat(8, calc((100% / 8) - (var(--column-gap) * 7 / 8))); }
        .#{nth($breakpoint, 1)}\39 -grid         { grid-template-columns: repeat(9, calc((100% / 9) - (var(--column-gap) * 8 / 9))); }
        .#{nth($breakpoint, 1)}\31 0-grid        { grid-template-columns: repeat(10, calc((100% / 10) - (var(--column-gap) * 9 / 10))); }
        .#{nth($breakpoint, 1)}\31 1-grid        { grid-template-columns: repeat(11, calc((100% / 11) - (var(--column-gap) * 10 / 11))); }
        .#{nth($breakpoint, 1)}\31 2-grid        { grid-template-columns: repeat(12, calc((100% / 12) - (var(--column-gap) * 11 / 12))); }
		.#{nth($breakpoint, 1)}x-1            { grid-column-start: 1 !important; }
		.#{nth($breakpoint, 1)}x-2            { grid-column-start: 2 !important; }
		.#{nth($breakpoint, 1)}x-3            { grid-column-start: 3 !important; }
		.#{nth($breakpoint, 1)}x-4            { grid-column-start: 4 !important; }
		.#{nth($breakpoint, 1)}x-5            { grid-column-start: 5 !important; }
		.#{nth($breakpoint, 1)}x-6            { grid-column-start: 6 !important; }
		.#{nth($breakpoint, 1)}x-7            { grid-column-start: 7 !important; }
		.#{nth($breakpoint, 1)}x-8            { grid-column-start: 8 !important; }
		.#{nth($breakpoint, 1)}x-9            { grid-column-start: 9 !important; }
		.#{nth($breakpoint, 1)}x-10           { grid-column-start: 10 !important; }
		.#{nth($breakpoint, 1)}x-11           { grid-column-start: 11 !important; }
		.#{nth($breakpoint, 1)}x-12           { grid-column-start: 12 !important; }
		.#{nth($breakpoint, 1)}xspan-1       { grid-column-end: span 1 !important; }
		.#{nth($breakpoint, 1)}xspan-2       { grid-column-end: span 2 !important; }
		.#{nth($breakpoint, 1)}xspan-3       { grid-column-end: span 3 !important; }
		.#{nth($breakpoint, 1)}xspan-4       { grid-column-end: span 4 !important; }
		.#{nth($breakpoint, 1)}xspan-5       { grid-column-end: span 5 !important; }
		.#{nth($breakpoint, 1)}xspan-6       { grid-column-end: span 6 !important; }
		.#{nth($breakpoint, 1)}xspan-7       { grid-column-end: span 7 !important; }
		.#{nth($breakpoint, 1)}xspan-8       { grid-column-end: span 8 !important; }
		.#{nth($breakpoint, 1)}xspan-9       { grid-column-end: span 9 !important; }
		.#{nth($breakpoint, 1)}xspan-10      { grid-column-end: span 10 !important; }
		.#{nth($breakpoint, 1)}xspan-11      { grid-column-end: span 11 !important; }
		.#{nth($breakpoint, 1)}xspan-12      { grid-column-end: span 12 !important; }
        .#{nth($breakpoint, 1)}xspan--1      { grid-column-end: span -1 !important; }
        .#{nth($breakpoint, 1)}x-end          { justify-self: end !important; }
        .#{nth($breakpoint, 1)}x-start        { justify-self: start !important; }
        .#{nth($breakpoint, 1)}x-center       { justify-self: center !important; }
        .#{nth($breakpoint, 1)}x-stretch      { justify-self: stretch !important; }
		.#{nth($breakpoint, 1)}x-bleed        {
			justify-self: stretch !important;
			margin-left:  calc(var(--column-gap) / -2);
			margin-right: calc(var(--column-gap) / -2);
			width:        calc(100% + var(--column-gap));
		}
		.#{nth($breakpoint, 1)}y-1            { grid-row-start: 1 !important; }
		.#{nth($breakpoint, 1)}y-2            { grid-row-start: 2 !important; }
		.#{nth($breakpoint, 1)}y-3            { grid-row-start: 3 !important; }
		.#{nth($breakpoint, 1)}y-4            { grid-row-start: 4 !important; }
		.#{nth($breakpoint, 1)}y-5            { grid-row-start: 5 !important; }
		.#{nth($breakpoint, 1)}y-6            { grid-row-start: 6 !important; }
		.#{nth($breakpoint, 1)}y-7            { grid-row-start: 7 !important; }
		.#{nth($breakpoint, 1)}y-8            { grid-row-start: 8 !important; }
		.#{nth($breakpoint, 1)}y-9            { grid-row-start: 9 !important; }
		.#{nth($breakpoint, 1)}y-10           { grid-row-start: 10 !important; }
		.#{nth($breakpoint, 1)}y-11           { grid-row-start: 11 !important; }
		.#{nth($breakpoint, 1)}y-12           { grid-row-start: 12 !important; }
		.#{nth($breakpoint, 1)}y-13           { grid-row-start: 13 !important; }
		.#{nth($breakpoint, 1)}y-14           { grid-row-start: 14 !important; }
		.#{nth($breakpoint, 1)}y-15           { grid-row-start: 15 !important; }
		.#{nth($breakpoint, 1)}y-16           { grid-row-start: 16 !important; }
		.#{nth($breakpoint, 1)}y-17           { grid-row-start: 17 !important; }
		.#{nth($breakpoint, 1)}y-18           { grid-row-start: 18 !important; }
        .#{nth($breakpoint, 1)}yspan-1       { grid-row-end: span 1 !important; }
		.#{nth($breakpoint, 1)}yspan-2       { grid-row-end: span 2 !important; }
		.#{nth($breakpoint, 1)}yspan-3       { grid-row-end: span 3 !important; }
		.#{nth($breakpoint, 1)}yspan-4       { grid-row-end: span 4 !important; }
		.#{nth($breakpoint, 1)}yspan-5       { grid-row-end: span 5 !important; }
		.#{nth($breakpoint, 1)}yspan-6       { grid-row-end: span 6 !important; }
		.#{nth($breakpoint, 1)}yspan-7       { grid-row-end: span 7 !important; }
		.#{nth($breakpoint, 1)}yspan-8       { grid-row-end: span 8 !important; }
		.#{nth($breakpoint, 1)}yspan-9       { grid-row-end: span 9 !important; }
		.#{nth($breakpoint, 1)}yspan-10      { grid-row-end: span 10 !important; }
		.#{nth($breakpoint, 1)}yspan-11      { grid-row-end: span 11 !important; }
		.#{nth($breakpoint, 1)}yspan-12      { grid-row-end: span 12 !important; }
        .#{nth($breakpoint, 1)}yspan--1      { grid-row-end: span -1 !important; }
        .#{nth($breakpoint, 1)}y-end          { align-self: end !important; }
        .#{nth($breakpoint, 1)}y-start        { align-self: start !important; }
        .#{nth($breakpoint, 1)}y-center       { align-self: center !important; }
        .#{nth($breakpoint, 1)}y-stretch      { align-self: stretch !important; }
        .#{nth($breakpoint, 1)}y-baseline     { align-self: baseline !important; }
        .#{nth($breakpoint, 1)}columns-2      { columns: 2 !important; }
        .#{nth($breakpoint, 1)}columns-3      { columns: 3 !important; }
        .#{nth($breakpoint, 1)}columns-4      { columns: 4 !important; }
        .#{nth($breakpoint, 1)}columns-5      { columns: 5 !important; }
        .#{nth($breakpoint, 1)}columns-6      { columns: 6 !important; }
        .#{nth($breakpoint, 1)}columns-7      { columns: 7 !important; }
        .#{nth($breakpoint, 1)}columns-8      { columns: 8 !important; }
        .#{nth($breakpoint, 1)}columns-9      { columns: 9 !important; }
        .#{nth($breakpoint, 1)}columns-10     { columns: 10 !important; }
        .#{nth($breakpoint, 1)}columns-11     { columns: 11 !important; }
        .#{nth($breakpoint, 1)}columns-12     { columns: 12 !important; }
	}
}
