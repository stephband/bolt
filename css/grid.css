/* Literal template "css/grid.css.literal" */

/* Literal template "css/grid.literal" */

/**
Columns.
**/

/**
.2-columns

```html
<div class="2-columns columns" style="--column-gap: 0.9375rem; font-size: 0.875rem;">
    Crunchum ipsum dolor sit coder void, constructor function, sed do while loop python orientation semi colon incident.
</div>
```
**/

/**
.3-columns

```html
<div class="3-columns columns" style="--column-gap: 0.9375rem; font-size: 0.875rem;">
    Crunchum ipsum dolor sit coder void, constructor function, sed do while loop python orientation semi colon incident.
</div>
```
**/

/**
.4-columns … .12-columns

```html
<div class="4-columns columns" style="--column-gap: 0.9375rem; font-size: 0.875rem;">
    Crunchum ipsum dolor sit coder void, constructor function, sed do while loop python orientation semi colon incident.
</div>
```
**/



/**
Grid.
**/

/**
.grid

```html
<div class="grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem; font-size: 0.875rem;">
    <div class="button">&nbsp;</div>
</div>
```

Creates a grid with horizontal flow and equal width columns.
**/

/**
.2x-grid

```html
<div class="2x-grid grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem; font-size: 0.875rem;">
    <div class="button">&nbsp;</div>
    <div class="button">&nbsp;</div>
</div>
```

Creates a grid with 2 equal width columns.
**/

/**
.3x-grid

```html
<div class="3x-grid grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem; font-size: 0.875rem;">
    <div class="button">&nbsp;</div>
    <div class="button">&nbsp;</div>
    <div class="button">&nbsp;</div>
</div>
```

Creates a grid with 3 equal width columns.
**/

/**
.4x-grid … .12x-grid

```html
<div class="4x-grid grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem; font-size: 0.875rem;">
    <div class="button">&nbsp;</div>
    <div class="button">&nbsp;</div>
    <div class="button">&nbsp;</div>
    <div class="button">&nbsp;</div>
</div>
```
**/

/**
.x-1 … .x-12,
.2x … .12x,
.x-start,
.x-center,
.x-end,
.x-stretch,
.x-bleed,
.x-flood

```html
<div class="grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem; font-size: 0.875rem;">
    <div class="button x-1">x-1</div>
    <div class="button x-2">x-2</div>
    <div class="button x-3">x-3</div>
    <div class="button x-1 2x">2x</div>
    <div class="button x-1 3x">3x</div>
    <div class="button x-1 x-start y-4">x-start</div>
    <div class="button x-2 x-center y-4">x-center</div>
    <div class="button x-3 x-end y-4">x-end</div>
    <div class="button x-1 x-stretch y-5">x-stretch</div>
    <div class="button x-2 x-bleed y-5">x-bleed</div>
    <div class="button x-3 x-flood y-5">x-flood</div>
</div>
```

Note that `.x-bleed`, which stretches an element half the way across the grid 
gap, and `.x-flood`, which stretches an element all the way across the grid gap,
depends on `column-gap` having been set via the custom property `--column-gap`.
**/

/**
.y-1 … .y-18,
.2y … .12y,
.y-start,
.y-center,
.y-end,
.y-stretch,
.y-bleed,
.y-flood,
.y-baseline,
.y-lastline

```html
<div class="grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem; font-size: 0.875rem;">
    <div class="button x-1 y-1">y-1</div>
    <div class="button x-1 y-2">y-2</div>
    <div class="button x-1 y-3">y-3</div>
    <div class="button x-2 y-1 2y">2y</div>
    <div class="button x-3 y-1 3y">3y</div>
    <div class="button x-1 y-4 y-start">y-start</div>
    <div class="button x-1 y-5 y-center">y-center</div>
    <div class="button x-1 y-6 y-end">y-end</div>
    <div class="button x-2 y-4 y-stretch">y-stretch</div>
    <div class="button x-2 y-5 y-bleed">y-bleed</div>
    <div class="button x-2 y-6 y-flood">y-flood</div>
    <div class="button x-3 y-4 y-baseline">y-baseline</div>
    <div class="button x-3 y-5 y-lastline">y-lastline</div>
</div>
```
**/

/**
--column-gap
Define the horizontal grid gap (with units).
**/

/**
--row-gap
Define the vertical grid gap (with units).
**/



    /* Columns */
    
    .columns {
        --column-gap: 1.5rem;
        display: block !important;
        column-gap: var(--column-gap);
    }
    
    .\31 -columns  { columns: 1 !important; }
    .\32 -columns  { columns: 2 !important; }
    .\33 -columns  { columns: 3 !important; }

    /* Grid */

    .grid {
        --column-gap: 1.5rem;
        --row-gap: 1.5rem;
        display: grid !important;
        /* Horizontal layout */
        grid-auto-flow: row;
        /* Create equal columns by default. */
        grid-auto-columns: minmax(0, 1fr);
        column-gap: var(--column-gap);
        row-gap: var(--row-gap);
    }

    .y-start-grid {
        align-content: start;
    }

    /* X */
    
    .\31 x-grid  { grid-template-columns: repeat(1,  minmax(0, 1fr)); }
    .\32 x-grid  { grid-template-columns: repeat(2,  minmax(0, 1fr)); }
    .\33 x-grid  { grid-template-columns: repeat(3,  minmax(0, 1fr)); }
    .\34 x-grid  { grid-template-columns: repeat(3,  minmax(0, 1fr)); }
    
    .x1 { grid-column-start: 1 !important; }
    .x2 { grid-column-start: 2 !important; }
    .x3 { grid-column-start: 3 !important; }
    .x4 { grid-column-start: 4 !important; }
    
    .\31 x { grid-column-end: span 1 !important; }
    .\32 x { grid-column-end: span 2 !important; }
    .\33 x { grid-column-end: span 3 !important; }
    .\34 x { grid-column-end: span 4 !important; }

    .x-end {
        justify-self: end !important; 
        margin-right: 0; 
    }

    .x-start {
        justify-self: start !important;
        margin-left: 0; 
    }

    .x-center { 
        justify-self: center !important; 
    }

    .x-stretch { 
        justify-self: stretch !important; 
        margin-left: 0; 
        margin-right: 0; 
    }

    .x-bleed {
        justify-self: stretch !important;
        margin-left:  calc(var(--column-gap) / -2);
        margin-right: calc(var(--column-gap) / -2);
    }

    .x-flood {
        justify-self: stretch !important;
        margin-left:  calc(-1 * var(--column-gap));
        margin-right: calc(-1 * var(--column-gap));
    }

    /* Y */
    
    .\31 y-grid  { grid-template-rows: repeat(1,  minmax(0, 1fr)); }
    .\32 y-grid  { grid-template-rows: repeat(2,  minmax(0, 1fr)); }
    .\33 y-grid  { grid-template-rows: repeat(3,  minmax(0, 1fr)); }
    
    .y1 { grid-row-start: 1 !important; }
    .y2 { grid-row-start: 2 !important; }
    .y3 { grid-row-start: 3 !important; }
    
    .\31 y { grid-row-end: span 1 !important; }
    .\32 y { grid-row-end: span 2 !important; }
    .\33 y { grid-row-end: span 3 !important; }

    .y-end       {
        align-self: end !important;
        margin-bottom: 0;
    }

    .y-start     {
        align-self: start !important;
        margin-top: 0;
    }

    .y-center    {
        align-self: center !important;
    }

    .y-stretch   {
        align-self: stretch !important;
        margin-top: 0; 
        margin-bottom: 0;
    }

    .y-baseline  {
        align-self: baseline !important; 
    }

    .y-lastline  {
        align-self: last baseline !important; 
    }

    .y-bleed {
        align-self: stretch !important;
        margin-top:  calc(var(--row-gap) / -2);
        margin-bottom: calc(var(--row-gap) / -2);
    }

    .y-flood {
        align-self: stretch !important;
        margin-top:  calc(-1 * var(--row-gap));
        margin-bottom: calc(-1 * var(--row-gap));
    }

    /*
    We dont want this it prevents us from putting two grid systems on the page
    :root {
        --column-gap: 1.5rem;
        --row-gap: 1.5rem;
    }
    */

/* S-class, 50em (800px) */

@media (min-width: 50em) {
    /* Columns */
    
    .S-columns {
        --column-gap: 1.5rem;
        display: block !important;
        column-gap: var(--column-gap);
    }
    
    .S-1-columns  { columns: 1 !important; }
    .S-2-columns  { columns: 2 !important; }
    .S-3-columns  { columns: 3 !important; }
    .S-4-columns  { columns: 4 !important; }
    .S-5-columns  { columns: 5 !important; }
    .S-6-columns  { columns: 6 !important; }

    /* Grid */

    .S-grid {
        --column-gap: 1.5rem;
        --row-gap: 1.5rem;
        display: grid !important;
        /* Horizontal layout */
        grid-auto-flow: row;
        /* Create equal columns by default. */
        grid-auto-columns: minmax(0, 1fr);
        column-gap: var(--column-gap);
        row-gap: var(--row-gap);
    }

    .S-y-start-grid {
        align-content: start;
    }

    /* X */
    
    .S-1x-grid  { grid-template-columns: repeat(1,  minmax(0, 1fr)); }
    .S-2x-grid  { grid-template-columns: repeat(2,  minmax(0, 1fr)); }
    .S-3x-grid  { grid-template-columns: repeat(3,  minmax(0, 1fr)); }
    .S-4x-grid  { grid-template-columns: repeat(4,  minmax(0, 1fr)); }
    .S-5x-grid  { grid-template-columns: repeat(5,  minmax(0, 1fr)); }
    .S-6x-grid  { grid-template-columns: repeat(6,  minmax(0, 1fr)); }
    
    .S-x-1 { grid-column-start: 1 !important; }
    .S-x-2 { grid-column-start: 2 !important; }
    .S-x-3 { grid-column-start: 3 !important; }
    .S-x-4 { grid-column-start: 4 !important; }
    .S-x-5 { grid-column-start: 5 !important; }
    .S-x-6 { grid-column-start: 6 !important; }
    
    .S-1x { grid-column-end: span 1 !important; }
    .S-2x { grid-column-end: span 2 !important; }
    .S-3x { grid-column-end: span 3 !important; }
    .S-4x { grid-column-end: span 4 !important; }
    .S-5x { grid-column-end: span 5 !important; }
    .S-6x { grid-column-end: span 6 !important; }

    .S-x-end {
        justify-self: end !important; 
        margin-right: 0; 
    }

    .S-x-start {
        justify-self: start !important;
        margin-left: 0; 
    }

    .S-x-center { 
        justify-self: center !important; 
    }

    .S-x-stretch { 
        justify-self: stretch !important; 
        margin-left: 0; 
        margin-right: 0; 
    }

    .S-x-bleed {
        justify-self: stretch !important;
        margin-left:  calc(var(--column-gap) / -2);
        margin-right: calc(var(--column-gap) / -2);
    }

    .S-x-flood {
        justify-self: stretch !important;
        margin-left:  calc(-1 * var(--column-gap));
        margin-right: calc(-1 * var(--column-gap));
    }

    /* Y */
    
    .S-1y-grid  { grid-template-rows: repeat(1,  minmax(0, 1fr)); }
    .S-2y-grid  { grid-template-rows: repeat(2,  minmax(0, 1fr)); }
    .S-3y-grid  { grid-template-rows: repeat(3,  minmax(0, 1fr)); }
    .S-4y-grid  { grid-template-rows: repeat(4,  minmax(0, 1fr)); }
    .S-5y-grid  { grid-template-rows: repeat(5,  minmax(0, 1fr)); }
    .S-6y-grid  { grid-template-rows: repeat(6,  minmax(0, 1fr)); }
    
    .S-y-1 { grid-row-start: 1 !important; }
    .S-y-2 { grid-row-start: 2 !important; }
    .S-y-3 { grid-row-start: 3 !important; }
    .S-y-4 { grid-row-start: 4 !important; }
    .S-y-5 { grid-row-start: 5 !important; }
    .S-y-6 { grid-row-start: 6 !important; }
    
    .S-1y { grid-row-end: span 1 !important; }
    .S-2y { grid-row-end: span 2 !important; }
    .S-3y { grid-row-end: span 3 !important; }
    .S-4y { grid-row-end: span 4 !important; }
    .S-5y { grid-row-end: span 5 !important; }
    .S-6y { grid-row-end: span 6 !important; }

    .S-y-end       {
        align-self: end !important;
        margin-bottom: 0;
    }

    .S-y-start     {
        align-self: start !important;
        margin-top: 0;
    }

    .S-y-center    {
        align-self: center !important;
    }

    .S-y-stretch   {
        align-self: stretch !important;
        margin-top: 0; 
        margin-bottom: 0;
    }

    .S-y-baseline  {
        align-self: baseline !important; 
    }

    .S-y-lastline  {
        align-self: last baseline !important; 
    }

    .S-y-bleed {
        align-self: stretch !important;
        margin-top:  calc(var(--row-gap) / -2);
        margin-bottom: calc(var(--row-gap) / -2);
    }

    .S-y-flood {
        align-self: stretch !important;
        margin-top:  calc(-1 * var(--row-gap));
        margin-bottom: calc(-1 * var(--row-gap));
    }

    /*
    We dont want this it prevents us from putting two grid systems on the page
    :root {
        --column-gap: 1.5rem;
        --row-gap: 1.5rem;
    }
    */
}

/* M-class, 70em (1120px) */

@media (min-width: 70em) {
    /* Columns */
    
    .M-columns {
        --column-gap: 2.8125rem;
        display: block !important;
        column-gap: var(--column-gap);
    }
    
    .M-1-columns  { columns: 1 !important; }
    .M-2-columns  { columns: 2 !important; }
    .M-3-columns  { columns: 3 !important; }
    .M-4-columns  { columns: 4 !important; }
    .M-5-columns  { columns: 5 !important; }
    .M-6-columns  { columns: 6 !important; }
    .M-7-columns  { columns: 7 !important; }
    .M-8-columns  { columns: 8 !important; }
    .M-9-columns  { columns: 9 !important; }

    /* Grid */

    .M-grid {
        --column-gap: 2.8125rem;
        --row-gap: 1.875rem;
        display: grid !important;
        /* Horizontal layout */
        grid-auto-flow: row;
        /* Create equal columns by default. */
        grid-auto-columns: minmax(0, 1fr);
        column-gap: var(--column-gap);
        row-gap: var(--row-gap);
    }

    .M-y-start-grid {
        align-content: start;
    }

    /* X */
    
    .M-1x-grid  { grid-template-columns: repeat(1,  minmax(0, 1fr)); }
    .M-2x-grid  { grid-template-columns: repeat(2,  minmax(0, 1fr)); }
    .M-3x-grid  { grid-template-columns: repeat(3,  minmax(0, 1fr)); }
    .M-4x-grid  { grid-template-columns: repeat(4,  minmax(0, 1fr)); }
    .M-5x-grid  { grid-template-columns: repeat(5,  minmax(0, 1fr)); }
    .M-6x-grid  { grid-template-columns: repeat(6,  minmax(0, 1fr)); }
    .M-7x-grid  { grid-template-columns: repeat(7,  minmax(0, 1fr)); }
    .M-8x-grid  { grid-template-columns: repeat(8,  minmax(0, 1fr)); }
    .M-9x-grid  { grid-template-columns: repeat(9,  minmax(0, 1fr)); }
    
    .M-x-1 { grid-column-start: 1 !important; }
    .M-x-2 { grid-column-start: 2 !important; }
    .M-x-3 { grid-column-start: 3 !important; }
    .M-x-4 { grid-column-start: 4 !important; }
    .M-x-5 { grid-column-start: 5 !important; }
    .M-x-6 { grid-column-start: 6 !important; }
    .M-x-7 { grid-column-start: 7 !important; }
    .M-x-8 { grid-column-start: 8 !important; }
    .M-x-9 { grid-column-start: 9 !important; }
    
    .M-1x { grid-column-end: span 1 !important; }
    .M-2x { grid-column-end: span 2 !important; }
    .M-3x { grid-column-end: span 3 !important; }
    .M-4x { grid-column-end: span 4 !important; }
    .M-5x { grid-column-end: span 5 !important; }
    .M-6x { grid-column-end: span 6 !important; }
    .M-7x { grid-column-end: span 7 !important; }
    .M-8x { grid-column-end: span 8 !important; }
    .M-9x { grid-column-end: span 9 !important; }

    .M-x-end {
        justify-self: end !important; 
        margin-right: 0; 
    }

    .M-x-start {
        justify-self: start !important;
        margin-left: 0; 
    }

    .M-x-center { 
        justify-self: center !important; 
    }

    .M-x-stretch { 
        justify-self: stretch !important; 
        margin-left: 0; 
        margin-right: 0; 
    }

    .M-x-bleed {
        justify-self: stretch !important;
        margin-left:  calc(var(--column-gap) / -2);
        margin-right: calc(var(--column-gap) / -2);
    }

    .M-x-flood {
        justify-self: stretch !important;
        margin-left:  calc(-1 * var(--column-gap));
        margin-right: calc(-1 * var(--column-gap));
    }

    /* Y */
    
    .M-1y-grid  { grid-template-rows: repeat(1,  minmax(0, 1fr)); }
    .M-2y-grid  { grid-template-rows: repeat(2,  minmax(0, 1fr)); }
    .M-3y-grid  { grid-template-rows: repeat(3,  minmax(0, 1fr)); }
    .M-4y-grid  { grid-template-rows: repeat(4,  minmax(0, 1fr)); }
    .M-5y-grid  { grid-template-rows: repeat(5,  minmax(0, 1fr)); }
    .M-6y-grid  { grid-template-rows: repeat(6,  minmax(0, 1fr)); }
    .M-7y-grid  { grid-template-rows: repeat(7,  minmax(0, 1fr)); }
    .M-8y-grid  { grid-template-rows: repeat(8,  minmax(0, 1fr)); }
    .M-9y-grid  { grid-template-rows: repeat(9,  minmax(0, 1fr)); }
    
    .M-y-1 { grid-row-start: 1 !important; }
    .M-y-2 { grid-row-start: 2 !important; }
    .M-y-3 { grid-row-start: 3 !important; }
    .M-y-4 { grid-row-start: 4 !important; }
    .M-y-5 { grid-row-start: 5 !important; }
    .M-y-6 { grid-row-start: 6 !important; }
    .M-y-7 { grid-row-start: 7 !important; }
    .M-y-8 { grid-row-start: 8 !important; }
    .M-y-9 { grid-row-start: 9 !important; }
    
    .M-1y { grid-row-end: span 1 !important; }
    .M-2y { grid-row-end: span 2 !important; }
    .M-3y { grid-row-end: span 3 !important; }
    .M-4y { grid-row-end: span 4 !important; }
    .M-5y { grid-row-end: span 5 !important; }
    .M-6y { grid-row-end: span 6 !important; }
    .M-7y { grid-row-end: span 7 !important; }
    .M-8y { grid-row-end: span 8 !important; }
    .M-9y { grid-row-end: span 9 !important; }

    .M-y-end       {
        align-self: end !important;
        margin-bottom: 0;
    }

    .M-y-start     {
        align-self: start !important;
        margin-top: 0;
    }

    .M-y-center    {
        align-self: center !important;
    }

    .M-y-stretch   {
        align-self: stretch !important;
        margin-top: 0; 
        margin-bottom: 0;
    }

    .M-y-baseline  {
        align-self: baseline !important; 
    }

    .M-y-lastline  {
        align-self: last baseline !important; 
    }

    .M-y-bleed {
        align-self: stretch !important;
        margin-top:  calc(var(--row-gap) / -2);
        margin-bottom: calc(var(--row-gap) / -2);
    }

    .M-y-flood {
        align-self: stretch !important;
        margin-top:  calc(-1 * var(--row-gap));
        margin-bottom: calc(-1 * var(--row-gap));
    }

    /*
    We dont want this it prevents us from putting two grid systems on the page
    :root {
        --column-gap: 2.8125rem;
        --row-gap: 1.875rem;
    }
    */
}

/* L-class, 90em (1440px) */

@media (min-width: 90em) {
    /* Columns */
    
    .L-columns {
        --column-gap: 3.75rem;
        display: block !important;
        column-gap: var(--column-gap);
    }
    
    .L-1-columns  { columns: 1 !important; }
    .L-2-columns  { columns: 2 !important; }
    .L-3-columns  { columns: 3 !important; }
    .L-4-columns  { columns: 4 !important; }
    .L-5-columns  { columns: 5 !important; }
    .L-6-columns  { columns: 6 !important; }
    .L-7-columns  { columns: 7 !important; }
    .L-8-columns  { columns: 8 !important; }
    .L-9-columns  { columns: 9 !important; }

    /* Grid */

    .L-grid {
        --column-gap: 3.75rem;
        --row-gap: 1.875rem;
        display: grid !important;
        /* Horizontal layout */
        grid-auto-flow: row;
        /* Create equal columns by default. */
        grid-auto-columns: minmax(0, 1fr);
        column-gap: var(--column-gap);
        row-gap: var(--row-gap);
    }

    .L-y-start-grid {
        align-content: start;
    }

    /* X */
    
    .L-1x-grid  { grid-template-columns: repeat(1,  minmax(0, 1fr)); }
    .L-2x-grid  { grid-template-columns: repeat(2,  minmax(0, 1fr)); }
    .L-3x-grid  { grid-template-columns: repeat(3,  minmax(0, 1fr)); }
    .L-4x-grid  { grid-template-columns: repeat(4,  minmax(0, 1fr)); }
    .L-5x-grid  { grid-template-columns: repeat(5,  minmax(0, 1fr)); }
    .L-6x-grid  { grid-template-columns: repeat(6,  minmax(0, 1fr)); }
    .L-7x-grid  { grid-template-columns: repeat(7,  minmax(0, 1fr)); }
    .L-8x-grid  { grid-template-columns: repeat(8,  minmax(0, 1fr)); }
    .L-9x-grid  { grid-template-columns: repeat(9,  minmax(0, 1fr)); }
    
    .L-x-1 { grid-column-start: 1 !important; }
    .L-x-2 { grid-column-start: 2 !important; }
    .L-x-3 { grid-column-start: 3 !important; }
    .L-x-4 { grid-column-start: 4 !important; }
    .L-x-5 { grid-column-start: 5 !important; }
    .L-x-6 { grid-column-start: 6 !important; }
    .L-x-7 { grid-column-start: 7 !important; }
    .L-x-8 { grid-column-start: 8 !important; }
    .L-x-9 { grid-column-start: 9 !important; }
    
    .L-1x { grid-column-end: span 1 !important; }
    .L-2x { grid-column-end: span 2 !important; }
    .L-3x { grid-column-end: span 3 !important; }
    .L-4x { grid-column-end: span 4 !important; }
    .L-5x { grid-column-end: span 5 !important; }
    .L-6x { grid-column-end: span 6 !important; }
    .L-7x { grid-column-end: span 7 !important; }
    .L-8x { grid-column-end: span 8 !important; }
    .L-9x { grid-column-end: span 9 !important; }

    .L-x-end {
        justify-self: end !important; 
        margin-right: 0; 
    }

    .L-x-start {
        justify-self: start !important;
        margin-left: 0; 
    }

    .L-x-center { 
        justify-self: center !important; 
    }

    .L-x-stretch { 
        justify-self: stretch !important; 
        margin-left: 0; 
        margin-right: 0; 
    }

    .L-x-bleed {
        justify-self: stretch !important;
        margin-left:  calc(var(--column-gap) / -2);
        margin-right: calc(var(--column-gap) / -2);
    }

    .L-x-flood {
        justify-self: stretch !important;
        margin-left:  calc(-1 * var(--column-gap));
        margin-right: calc(-1 * var(--column-gap));
    }

    /* Y */
    
    .L-1y-grid  { grid-template-rows: repeat(1,  minmax(0, 1fr)); }
    .L-2y-grid  { grid-template-rows: repeat(2,  minmax(0, 1fr)); }
    .L-3y-grid  { grid-template-rows: repeat(3,  minmax(0, 1fr)); }
    .L-4y-grid  { grid-template-rows: repeat(4,  minmax(0, 1fr)); }
    .L-5y-grid  { grid-template-rows: repeat(5,  minmax(0, 1fr)); }
    .L-6y-grid  { grid-template-rows: repeat(6,  minmax(0, 1fr)); }
    .L-7y-grid  { grid-template-rows: repeat(7,  minmax(0, 1fr)); }
    .L-8y-grid  { grid-template-rows: repeat(8,  minmax(0, 1fr)); }
    .L-9y-grid  { grid-template-rows: repeat(9,  minmax(0, 1fr)); }
    
    .L-y-1 { grid-row-start: 1 !important; }
    .L-y-2 { grid-row-start: 2 !important; }
    .L-y-3 { grid-row-start: 3 !important; }
    .L-y-4 { grid-row-start: 4 !important; }
    .L-y-5 { grid-row-start: 5 !important; }
    .L-y-6 { grid-row-start: 6 !important; }
    .L-y-7 { grid-row-start: 7 !important; }
    .L-y-8 { grid-row-start: 8 !important; }
    .L-y-9 { grid-row-start: 9 !important; }
    
    .L-1y { grid-row-end: span 1 !important; }
    .L-2y { grid-row-end: span 2 !important; }
    .L-3y { grid-row-end: span 3 !important; }
    .L-4y { grid-row-end: span 4 !important; }
    .L-5y { grid-row-end: span 5 !important; }
    .L-6y { grid-row-end: span 6 !important; }
    .L-7y { grid-row-end: span 7 !important; }
    .L-8y { grid-row-end: span 8 !important; }
    .L-9y { grid-row-end: span 9 !important; }

    .L-y-end       {
        align-self: end !important;
        margin-bottom: 0;
    }

    .L-y-start     {
        align-self: start !important;
        margin-top: 0;
    }

    .L-y-center    {
        align-self: center !important;
    }

    .L-y-stretch   {
        align-self: stretch !important;
        margin-top: 0; 
        margin-bottom: 0;
    }

    .L-y-baseline  {
        align-self: baseline !important; 
    }

    .L-y-lastline  {
        align-self: last baseline !important; 
    }

    .L-y-bleed {
        align-self: stretch !important;
        margin-top:  calc(var(--row-gap) / -2);
        margin-bottom: calc(var(--row-gap) / -2);
    }

    .L-y-flood {
        align-self: stretch !important;
        margin-top:  calc(-1 * var(--row-gap));
        margin-bottom: calc(-1 * var(--row-gap));
    }

    /*
    We dont want this it prevents us from putting two grid systems on the page
    :root {
        --column-gap: 3.75rem;
        --row-gap: 1.875rem;
    }
    */
}

