
/**
Modifiers.
**/

/*
.active
Modify a two-state component to represent active state.
*/

.active {}

/*
.on
Modify a link or button that references a two-state component to represent
active state.
*/

.on {}

/*
.hidden

Hide element.
*/

.hidden {
	display: none !important;
}

/**
.print-hidden
Hide an element on printed page.
**/

@media print {
	.print-hidden {
		display: none !important;
	}
}

/*
.active-hidden
Hide an element when its parent has class <code>active</code>.
*/

.active-hidden.active,
.active > .active-hidden {
	display: none !important;
}

/*
.active-shown
Show an element when its parent has class <code>active</code>.
*/

:not(.active) > .active-shown:not(.active) {
	display: none !important;
}


/*
.on-hidden
Hide an element when its parent has class <code>on</code>.
*/

.on-hidden.on,
.on > .on-hidden {
	display: none !important;
}

/*
.on-shown
Show an element when its parent has class <code>on</code>.
*/

:not(.on) > .on-shown:not(.on) {
	display: none !important;
}

/*
.requested-hidden
Hide an element when its parent has class <code>requested</code>.
*/

.requested-hidden.requested,
.requested > .requested-hidden {
	display: none !important;
}

/*
.requested-shown
Show an element when its parent has class <code>requested</code>.
*/

:not(.requested) > .requested-shown:not(.requested) {
	display: none !important;
}

/**
.fullscreen-hidden

Hide an element when inside an element in fullscreen mode.
**/

.fullscreen-hidden:-webkit-full-screen,
:-webkit-full-screen .fullscreen-hidden {
	display: none !important;
}

.fullscreen-hidden:-moz-full-screen,
:-moz-full-screen .fullscreen-hidden {
	display: none !important;
}

.fullscreen-hidden:-ms-fullscreen,
:-ms-fullscreen .fullscreen-hidden {
	display: none !important;
}

.fullscreen-hidden:fullscreen,
:fullscreen .fullscreen-hidden {
	display: none !important;
}

/**
.fullscreen-shown

Hide an element when not in fullscreen mode.
**/

:not(:-webkit-full-screen) > .fullscreen-shown:not(:-webkit-full-screen) {
	display: none !important;
}

:not(:-moz-full-screen) > .fullscreen-shown:not(:-moz-full-screen) {
	display: none !important;
}

:not(:-ms-fullscreen) > .fullscreen-shown:not(:-ms-fullscreen) {
	display: none !important;
}

:not(:fullscreen) > .fullscreen-shown:not(:fullscreen) {
	display: none !important;
}


/**
.disabled
**/

.disabled,
:disabled {
	opacity: 0.4;
}

/**
.requested
Add <code>::after</code> content representing a loading animation.

```html
<div class="requested" style="height: 7.5rem;">
```
**/

@-webkit-keyframes rotation {
	from {-webkit-transform: rotate(0deg);}
	to {-webkit-transform: rotate(359deg);}
}

@keyframes rotation {
	from {transform: rotate(0deg);}
	to {transform: rotate(359deg);}
}

.js .requested::after {
	content: '';
	position: absolute;
	left: 50%;
	top: 50%;
	margin-left: -0.9375rem;
	margin-top: -0.9375rem;
	height: 1.875rem;
	width: 1.875rem;
	opacity: 1;

	-webkit-animation: rotation 1000ms infinite linear;
	        animation: rotation 1000ms infinite linear;

	border:     0.3125rem solid rgba(63, 63, 63, 0.15);
	border-top: 0.3125rem solid rgba(63, 63, 63, 1);
	border-radius: 100%;
	z-index: 100;
}

/**
.no-select
Prohibit user selection.
**/

.no-select {
	-webkit-touch-callout: none !important;
	  -webkit-user-select: none !important;
	      -ms-user-select: none !important;
	          user-select: none !important;
}

/**
.no-transition
Cancel transitions on an element and all descendents.
**/

.no-transition,
.no-transition *,
.no-transition::before,
.no-transition::after,
.no-transition *::before,
.no-transition *::after {
	-webkit-transition: none !important;
	   -moz-transition: none !important;
	     -o-transition: all 0 linear 0 !important;
	        transition: none !important;
}

/**
.clear
The clearfix hack.
**/

.clear::after {
	visibility: hidden;
	display: block;
	font-size: 0;
	content: " ";
	clear: both;
	height: 0;
}


/*
.fixed
*/

.fixed {
	position: fixed !important;
}


/*
.sticky
*/

.sticky {
	position: -webkit-sticky !important;
	position: sticky !important;
	top: 0;
}


/*
.left
*/

.left { float: left; clear: left; }

/*
.right
*/

.right { float: right; clear: right; }

/*
.top-align
*/

.top-align      { vertical-align: top !important; }

/*
.bottom-align
*/

.bottom-align   { vertical-align: bottom !important; }

/*
.middle-align
*/

.middle-align   { vertical-align: middle !important; }

/*
.baseline-align
*/

.baseline-align { vertical-align: baseline !important; }

/*
.left-align
*/

.left-align     { text-align: left !important; }

/*
.right-align
*/

.right-align    { text-align: right !important; }

/*
.center-align
*/

.center-align   { text-align: center !important; }

/*
.justify-align
*/

.justify-align  { text-align: justify !important; }


/*
.scroll

Set <code>overflow: auto;</code> and force display of scrollbars when
scrollable.

<pre class="scroll" style="height: 7.5rem;">
Crunchum ipsum dolor sit coder void, constructor function,
sed do while loop python orientation semi colon incident.
Duis aute irure indent tabs or spaces velit esse cilium
buntum how crunchy duntum. Excepteur tranquilis syntax
error memorandum qui officia nostrud operating system
alertus. Standards code est pulchra on chromium et foxus
sed souvent suckum in internet explorum.
</pre>
*/

.scroll {
	overflow: auto;
	/* Enable momentum scrolling. Unfortunately this is buggy. It doesn't
	   update the custom scrollbar during the momentum ease-out. Also, some
	   children get rendered improperly.
	   Update: Actually, it seems to have improved in iOS 6. */
	-webkit-overflow-scrolling: touch;
}

.scroll > * {
	/* Fixes iOS child rendering scrolling bug. Maybe.
	   http://stackoverflow.com/questions/7808110/css3-property-webkit-overflow-scrollingtouch-error */
	-webkit-transform: translateZ(0px);
}

.scroll::-webkit-scrollbar {
	/* Force scrollbars to display in mobile WebKit devices. For a demo
	   of scrollbar configurations:
	   http://trac.webkit.org/export/41842/trunk/LayoutTests/scrollbars/overflow-scrollbar-combinations.html
	*/
	width: 9px;
	height: 9px;
	background-color: transparent;
	-webkit-border-radius: 12px;
	        border-radius: 12px;
}

.scroll::-webkit-scrollbar-thumb:vertical,
.scroll::-webkit-scrollbar-thumb:horizontal {
	/* Approximate the style of the iPad's default scrollbars. (Can
	   probably do better, but this is quick). */
	background-color: #888888;
	border: 2px solid white;

	-webkit-border-radius: 12px;
	        border-radius: 12px;
}

.scroll::-webkit-scrollbar-thumb:vertical {
	min-height: 20px;
}

.scroll::-webkit-scrollbar-thumb:horizontal {
	min-width: 20px;
}

.scroll::-webkit-scrollbar-track-piece:disabled,
.scroll::-webkit-scrollbar-button:disabled {
	display: none !important;
}

/**
.hidden-scroll

Attempts to hide scrollbars where possible (Chrome, Safari, Opera).

```html
<pre class="hidden-scroll scroll" style="height: 7.5rem;">
Crunchum ipsum dolor sit coder void, constructor function,
sed do while loop python orientation semi colon incident.
Duis aute irure indent tabs or spaces velit esse cilium
buntum how crunchy duntum. Excepteur tranquilis syntax
error memorandum qui officia nostrud operating system
alertus. Standards code est pulchra on chromium et foxus
sed souvent suckum in internet explorum.
</pre>
```
*/

.hidden-scroll {
    -ms-overflow-style: none; /* IE 11 */
    scrollbar-width: none; /* Firefox 64 */
}

.hidden-scroll::-webkit-scrollbar {
	display: none;
}

/*
.x-scroll

Hides vertical overflow.

<pre class="x-scroll scroll" style="height: 7.5rem;">
Crunchum ipsum dolor sit coder void, constructor function,
sed do while loop python orientation semi colon incident.
Duis aute irure indent tabs or spaces velit esse cilium
buntum how crunchy duntum. Excepteur tranquilis syntax
error memorandum qui officia nostrud operating system
alertus. Standards code est pulchra on chromium et foxus
sed souvent suckum in internet explorum.
</pre>
*/

.x-scroll  { overflow-y: hidden; }

/*
.y-scroll

Hides horizontal overflow.

<pre class="y-scroll scroll" style="height: 7.5rem;">
Crunchum ipsum dolor sit coder void, constructor function,
sed do while loop python orientation semi colon incident.
Duis aute irure indent tabs or spaces velit esse cilium
buntum how crunchy duntum. Excepteur tranquilis syntax
error memorandum qui officia nostrud operating system
alertus. Standards code est pulchra on chromium et foxus
sed souvent suckum in internet explorum.
</pre>

Styleguide: 5.scroll-3
*/

.y-scroll  { overflow-x: hidden; }

/**
.no-scroll

Hides overflow.

```html
<pre class="no-scroll" style="height: 7.5rem;">
Crunchum ipsum dolor sit coder void, constructor function,
sed do while loop python orientation semi colon incident.
Duis aute irure indent tabs or spaces velit esse cilium
buntum how crunchy duntum. Excepteur tranquilis syntax
error memorandum qui officia nostrud operating system
alertus. Standards code est pulchra on chromium et foxus
sed souvent suckum in internet explorum.
</pre>
```
**/

.no-scroll { overflow: hidden !important; }
