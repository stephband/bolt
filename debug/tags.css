
[href=""],
:not(figure) > img:not([alt]),
p:empty,  p.empty-warning,
h1:empty, h1.empty-warning,
h2:empty, h2.empty-warning,
h3:empty, h3.empty-warning,
h4:empty, h4.empty-warning,
h5:empty, h5.empty-warning,
h6:empty, h6.empty-warning,
ul:empty, ul.empty-warning,
ol:empty, ol.empty-warning,
li:empty, li.empty-warning,
dl:empty, dl.empty-warning,
dt:empty, dt.empty-warning,
dd:empty, dd.empty-warning,
em:empty, em.empty-warning,
blockquote:empty, blockquote.empty-warning,
strong:empty,     strong.empty-warning,
strong strong {
    position: relative;
    box-shadow: inset 0 0 0px 1px rgba(255,0,74,0.75) !important;
    border-color: rgb(255, 0, 74) !important;
}

/*
It's fine to be empty and hidden.
It's not fine to be empty and display: none, because we should prioritise
the hidden attribute over display: none (and display: none may have been set in
type.css as a visual fallback so we override it here to flag it as an error).
*/
p:empty:not([hidden]),
h1:empty:not([hidden]),
h2:empty:not([hidden]),
h3:empty:not([hidden]),
h4:empty:not([hidden]),
h5:empty:not([hidden]),
h6:empty:not([hidden]),
ul:empty:not([hidden]),
ol:empty:not([hidden]),
li:empty:not([hidden]),
dl:empty:not([hidden]),
dt:empty:not([hidden]),
dd:empty:not([hidden]),
em:empty:not([hidden]),
blockquote:empty:not([hidden]),
strong:empty:not([hidden]) {
    /* Overide hiders in text.css */
    display: block !important;
    min-width: 3.125rem;
    min-height: 1rem;
}

p:empty::before,  p.empty-warning::before,
b:empty::before,  b.empty-warning::before,
h1:empty::before, h1.empty-warning::before,
h2:empty::before, h2.empty-warning::before,
h3:empty::before, h3.empty-warning::before,
h4:empty::before, h4.empty-warning::before,
h5:empty::before, h5.empty-warning::before,
h6:empty::before, h6.empty-warning::before,
ul:empty::before, ul.empty-warning::before,
ol:empty::before, ol.empty-warning::before,
li:empty::before, li.empty-warning::before,
dl:empty::before, dl.empty-warning::before,
dt:empty::before, dt.empty-warning::before,
dd:empty::before, dd.empty-warning::before,
em:empty::before, em.empty-warning::before,
blockquote:empty::before, blockquote.empty-warning::before,
strong:empty::before,     strong.empty-warning::before,
strong strong::before {
    /* Do not position it with top, left, etc. We cannot give the parent
       position: relative */
    position: absolute;
    font-family: 'Andale Mono', 'Courier New', monospace;
    font-size: 0.6875rem;
    font-style: normal;
    line-height: 0.9375rem;
    text-transform: none;
    min-width: 3.125rem;
    padding: 0.0625rem;
    white-space: nowrap;
    color: white;
    background-color: rgb(255, 0, 74);
    /* Maximum possible z-index */
    z-index: 2147483647;
}

p:empty::before,  p.empty-warning:before   { content: 'Empty <p>'; }
b:empty::before,  b.empty-warning:before   { content: 'Empty <b>'; }
h1:empty::before, h1.empty-warning::before { content: 'Empty <h1>'; }
h2:empty::before, h2.empty-warning::before { content: 'Empty <h2>'; }
h3:empty::before, h3.empty-warning::before { content: 'Empty <h3>'; }
h4:empty::before, h4.empty-warning::before { content: 'Empty <h4>'; }
h5:empty::before, h5.empty-warning::before { content: 'Empty <h5>'; }
h6:empty::before, h6.empty-warning::before { content: 'Empty <h6>'; }
ul:empty::before, ul.empty-warning::before { content: 'Empty <ul>'; }
ol:empty::before, ol.empty-warning::before { content: 'Empty <ol>'; }
li:empty::before, li.empty-warning::before { content: 'Empty <li>'; }
dl:empty::before, dl.empty-warning::before { content: 'Empty <dl>'; }
dt:empty::before, dt.empty-warning::before { content: 'Empty <dt>'; }
dd:empty::before, dd.empty-warning::before { content: 'Empty <dd>'; }
em:empty::before, em.empty-warning::before { content: 'Empty <em>'; }
blockquote:empty::before, blockquote.empty-warning::before { content: 'Empty <blockquote>'; }
strong:empty::before,     strong.empty-warning::before     { content: 'Empty <strong>'; }
strong strong::before { content: '<strong> inside <strong>'; }
