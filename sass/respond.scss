
@import './var.scss';

/**
.hidden

Forces `display: none`. This class is also available with breakpoint prefixes
(`@1-`, `@2-`, ...).

```html
<a class="hidden" href="...">Link</a>
<a class="@2-hidden" href="...">Link</a>
```
**/

.hidden         { display: none !important; }

/**
.print-hidden
Hide element on printed page.
```html
<nav class="print-hidden">...</nav>
```
**/

@media print {
    .print-hidden {
        display: none !important;
    }
}

/**
.shown

Forces `display: none` below a given breakpoint. This class is only available
with breakpoint prefixes (`@1-`, `@2-`, ...).

```html
<a class="@1-shown" href="...">Link</a>
```
**/


/* Removed because we have projects that override .block - it sort of has two
   meanings, now, in Bolt – base class and modifier – which is a bad idea. */
/*().block          { display: block !important; }*/

.inline         { display: inline-block !important; }
.left           { float: left !important; clear: left; }
.right          { float: right !important; clear: right; }
.top-align      { vertical-align: top !important; }
.bottom-align   { vertical-align: bottom !important; }
.middle-align   { vertical-align: middle !important; }
.baseline-align { vertical-align: baseline !important; }
.left-align     { text-align: left !important; }
.right-align    { text-align: right !important; }
.center-align   { text-align: center !important; }
.justify-align  { text-align: justify !important; }

/**
.flex
Applies `display: flex`. This class may also be used with a
breakpoint prefix.
**/

.flex           { display: flex !important; }

@each $breakpoint in $breakpoints {
    @media screen and (max-width: #{nth($breakpoint, 2) - 0.001}) {
        .#{nth($breakpoint, 1)}shown          { display: none !important; }
    }

    @media screen and (min-width: #{nth($breakpoint, 2)}) {
        .#{nth($breakpoint, 1)}hidden         { display: none !important; }
        /*.#{nth($breakpoint, 1)}block          { display: block !important; }*/
        .#{nth($breakpoint, 1)}flex           { display: flex !important; }
        .#{nth($breakpoint, 1)}inline         { display: inline-block !important; }
        .#{nth($breakpoint, 1)}left           { float: left !important; clear: left; }
        .#{nth($breakpoint, 1)}right          { float: right !important; clear: right; }
        .#{nth($breakpoint, 1)}top-align      { vertical-align: top !important; }
        .#{nth($breakpoint, 1)}bottom-align   { vertical-align: bottom !important; }
        .#{nth($breakpoint, 1)}middle-align   { vertical-align: middle !important; }
        .#{nth($breakpoint, 1)}baseline-align { vertical-align: baseline !important; }
        .#{nth($breakpoint, 1)}left-align     { text-align: left !important; }
        .#{nth($breakpoint, 1)}right-align    { text-align: right !important; }
        .#{nth($breakpoint, 1)}center-align   { text-align: center !important; }
        .#{nth($breakpoint, 1)}justify-align  { text-align: justify !important; }
    }
}
