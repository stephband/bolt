
/*
THIS FILE IS GENERATED FROM SASS. DO NOT HAND-EDIT. THE NEXT BUILD WILL ERASE
YOUR CHANGES. YOU HAVE BEEN WARNED.
*/

@import './var.scss';

/**
Grid.
**/

/**
.grid

```html
<div class="grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem;">
    <button>&nbsp;</button>
    <button>&nbsp;</button>
    <button>&nbsp;</button>
</div>
```

Creates a grid with horizontal flow and equal width columns.
**/

/*
.2x-grid
Applies a grid template of 2 equal columns.
**/

/*
.3x-grid
Applies a grid template of 3 equal columns.
**/

/*
.4x-grid
Applies a grid template of 4 equal columns.
**/

/*
.5x-grid
Applies a grid template of 5 equal columns.
**/

/*
.6x-grid
Applies a grid template of 6 equal columns.
**/

/**
.x-1 … x-12, .2x … .12x, .x-start, .x-center, .x-end, .x-stretch, .x-bleed

```html
<div class="grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem;">
    <button class="x-1">x-1</button>
    <button class="x-2">x-2</button>
    <button class="x-3">x-3</button>
    <button class="x-1 2x">2x</button>
    <button class="x-1 3x">3x</button>
    <button class="x-1 x-start y-4">x-start</button>
    <button class="x-2 x-center y-4">x-center</button>
    <button class="x-3 x-end y-4">x-end</button>
    <button class="x-1 x-stretch y-5">x-stretch</button>
    <button class="x-2 x-bleed y-5">x-bleed</button>
</div>
```

Note that `.x-bleed`, which stretches an element half the way over the grid gap,
depends on `column-gap` having been set via the custom property `--column-gap`.
**/

/**
.y-1 … .y-18, .2y … .12y, .y-start, .y-center, .y-end, .y-stretch, .y-baseline, .y-lastline

```html
<div class="grid" style="--column-gap: 0.9375rem; --row-gap: 0.9375rem;">
    <button class="x-1 y-1">y-1</button>
    <button class="x-1 y-2">y-2</button>
    <button class="x-1 y-3">y-3</button>
    <button class="x-2 y-1 2y">2y</button>
    <button class="x-3 y-1 3y">3y</button>
    <button class="x-1 y-4 y-start">y-start</button>
    <button class="x-1 y-5 y-center">y-center</button>
    <button class="x-1 y-6 y-end">y-end</button>
    <button class="x-2 y-4 y-stretch">y-stretch</button>
    <button class="x-3 y-4 y-baseline">y-baseline</button>
    <button class="x-3 y-5 y-lastline">y-lastline</button>
</div>
```
**/

/**
--column-gap
Define the horizontal grid gap.
**/

/**
--row-gap
Define the vertical grid gap.
**/

@each $breakpoint in $breakpoints {
@media (min-width: #{nth($breakpoint, 2)}) {
    .#{nth($breakpoint, 1)}grid           {
        display: grid !important;
        /* Horizontal layout */
        grid-auto-flow: row;
        /* Create equal columns by default. */
        grid-auto-columns: minmax(0, 1fr);
        column-gap: var(--column-gap);
        row-gap: var(--row-gap);
    }

    .#{nth($breakpoint, 1)}y-start-grid         {
        align-content: start;
    }

    .#{nth($breakpoint, 1)}#{'\\32'} x-grid  { grid-template-columns: repeat(2,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\33'} x-grid  { grid-template-columns: repeat(3,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\34'} x-grid  { grid-template-columns: repeat(4,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\35'} x-grid  { grid-template-columns: repeat(5,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\36'} x-grid  { grid-template-columns: repeat(6,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\37'} x-grid  { grid-template-columns: repeat(7,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\38'} x-grid  { grid-template-columns: repeat(8,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\39'} x-grid  { grid-template-columns: repeat(9,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\31'} 0x-grid { grid-template-columns: repeat(10, minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\31'} 1x-grid { grid-template-columns: repeat(11, minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\31'} 2x-grid { grid-template-columns: repeat(12, minmax(0, 1fr)); }

    .#{nth($breakpoint, 1)}x-1         { grid-column-start: 1 !important; }
    .#{nth($breakpoint, 1)}x-2         { grid-column-start: 2 !important; }
    .#{nth($breakpoint, 1)}x-3         { grid-column-start: 3 !important; }
    .#{nth($breakpoint, 1)}x-4         { grid-column-start: 4 !important; }
    .#{nth($breakpoint, 1)}x-5         { grid-column-start: 5 !important; }
    .#{nth($breakpoint, 1)}x-6         { grid-column-start: 6 !important; }
    .#{nth($breakpoint, 1)}x-7         { grid-column-start: 7 !important; }
    .#{nth($breakpoint, 1)}x-8         { grid-column-start: 8 !important; }
    .#{nth($breakpoint, 1)}x-9         { grid-column-start: 9 !important; }
    .#{nth($breakpoint, 1)}x-10        { grid-column-start: 10 !important; }
    .#{nth($breakpoint, 1)}x-11        { grid-column-start: 11 !important; }
    .#{nth($breakpoint, 1)}x-12        { grid-column-start: 12 !important; }

    .#{nth($breakpoint, 1)}#{'\\31'} x       { grid-column-end: span 1 !important; }
    .#{nth($breakpoint, 1)}#{'\\32'} x       { grid-column-end: span 2 !important; }
    .#{nth($breakpoint, 1)}#{'\\33'} x       { grid-column-end: span 3 !important; }
    .#{nth($breakpoint, 1)}#{'\\34'} x       { grid-column-end: span 4 !important; }
    .#{nth($breakpoint, 1)}#{'\\35'} x       { grid-column-end: span 5 !important; }
    .#{nth($breakpoint, 1)}#{'\\36'} x       { grid-column-end: span 6 !important; }
    .#{nth($breakpoint, 1)}#{'\\37'} x       { grid-column-end: span 7 !important; }
    .#{nth($breakpoint, 1)}#{'\\38'} x       { grid-column-end: span 8 !important; }
    .#{nth($breakpoint, 1)}#{'\\39'} x       { grid-column-end: span 9 !important; }
    .#{nth($breakpoint, 1)}#{'\\31'} 0x      { grid-column-end: span 10 !important; }
    .#{nth($breakpoint, 1)}#{'\\31'} 1x      { grid-column-end: span 11 !important; }
    .#{nth($breakpoint, 1)}#{'\\31'} 2x      { grid-column-end: span 12 !important; }

    .#{nth($breakpoint, 1)}x-end          { justify-self: end !important; margin-right: 0; }
    .#{nth($breakpoint, 1)}x-start        { justify-self: start !important; margin-left: 0; }
    .#{nth($breakpoint, 1)}x-center       { justify-self: center !important; }
    .#{nth($breakpoint, 1)}x-stretch      { justify-self: stretch !important; margin-left: 0; margin-right: 0; }
    .#{nth($breakpoint, 1)}x-bleed        {
        justify-self: stretch !important;
        margin-left:  calc(var(--column-gap) / -2);
        margin-right: calc(var(--column-gap) / -2);
    }

    .#{nth($breakpoint, 1)}#{'\\32'} y-grid  { grid-template-rows: repeat(2,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\33'} y-grid  { grid-template-rows: repeat(3,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\34'} y-grid  { grid-template-rows: repeat(4,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\35'} y-grid  { grid-template-rows: repeat(5,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\36'} y-grid  { grid-template-rows: repeat(6,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\37'} y-grid  { grid-template-rows: repeat(7,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\38'} y-grid  { grid-template-rows: repeat(8,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\39'} y-grid  { grid-template-rows: repeat(9,  minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\31'} 0y-grid { grid-template-rows: repeat(10, minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\31'} 1y-grid { grid-template-rows: repeat(11, minmax(0, 1fr)); }
    .#{nth($breakpoint, 1)}#{'\\31'} 2y-grid { grid-template-rows: repeat(12, minmax(0, 1fr)); }

    .#{nth($breakpoint, 1)}y-1         { grid-row-start: 1 !important; }
    .#{nth($breakpoint, 1)}y-2         { grid-row-start: 2 !important; }
    .#{nth($breakpoint, 1)}y-3         { grid-row-start: 3 !important; }
    .#{nth($breakpoint, 1)}y-4         { grid-row-start: 4 !important; }
    .#{nth($breakpoint, 1)}y-5         { grid-row-start: 5 !important; }
    .#{nth($breakpoint, 1)}y-6         { grid-row-start: 6 !important; }
    .#{nth($breakpoint, 1)}y-7         { grid-row-start: 7 !important; }
    .#{nth($breakpoint, 1)}y-8         { grid-row-start: 8 !important; }
    .#{nth($breakpoint, 1)}y-9         { grid-row-start: 9 !important; }
    .#{nth($breakpoint, 1)}y-10        { grid-row-start: 10 !important; }
    .#{nth($breakpoint, 1)}y-11        { grid-row-start: 11 !important; }
    .#{nth($breakpoint, 1)}y-12        { grid-row-start: 12 !important; }
    .#{nth($breakpoint, 1)}y-13        { grid-row-start: 13 !important; }
    .#{nth($breakpoint, 1)}y-14        { grid-row-start: 14 !important; }
    .#{nth($breakpoint, 1)}y-15        { grid-row-start: 15 !important; }
    .#{nth($breakpoint, 1)}y-16        { grid-row-start: 16 !important; }
    .#{nth($breakpoint, 1)}y-17        { grid-row-start: 17 !important; }
    .#{nth($breakpoint, 1)}y-18        { grid-row-start: 18 !important; }

    .#{nth($breakpoint, 1)}#{'\\31'} y       { grid-row-end: span 1 !important; }
    .#{nth($breakpoint, 1)}#{'\\32'} y       { grid-row-end: span 2 !important; }
    .#{nth($breakpoint, 1)}#{'\\33'} y       { grid-row-end: span 3 !important; }
    .#{nth($breakpoint, 1)}#{'\\34'} y       { grid-row-end: span 4 !important; }
    .#{nth($breakpoint, 1)}#{'\\35'} y       { grid-row-end: span 5 !important; }
    .#{nth($breakpoint, 1)}#{'\\36'} y       { grid-row-end: span 6 !important; }
    .#{nth($breakpoint, 1)}#{'\\37'} y       { grid-row-end: span 7 !important; }
    .#{nth($breakpoint, 1)}#{'\\38'} y       { grid-row-end: span 8 !important; }
    .#{nth($breakpoint, 1)}#{'\\39'} y       { grid-row-end: span 9 !important; }
    .#{nth($breakpoint, 1)}#{'\\31'} 0y      { grid-row-end: span 10 !important; }
    .#{nth($breakpoint, 1)}#{'\\31'} 1y      { grid-row-end: span 11 !important; }
    .#{nth($breakpoint, 1)}#{'\\31'} 2y      { grid-row-end: span 12 !important; }

    .#{nth($breakpoint, 1)}y-end       { align-self: end !important; }
    .#{nth($breakpoint, 1)}y-start     { align-self: start !important; }
    .#{nth($breakpoint, 1)}y-center    { align-self: center !important; }
    .#{nth($breakpoint, 1)}y-stretch   { align-self: stretch !important; }
    .#{nth($breakpoint, 1)}y-baseline  { align-self: baseline !important; }
    .#{nth($breakpoint, 1)}y-lastline  { align-self: last baseline !important; }

    .#{nth($breakpoint, 1)}columns-2   { columns: 2 !important; }
    .#{nth($breakpoint, 1)}columns-3   { columns: 3 !important; }
    .#{nth($breakpoint, 1)}columns-4   { columns: 4 !important; }
    .#{nth($breakpoint, 1)}columns-5   { columns: 5 !important; }
    .#{nth($breakpoint, 1)}columns-6   { columns: 6 !important; }
    .#{nth($breakpoint, 1)}columns-7   { columns: 7 !important; }
    .#{nth($breakpoint, 1)}columns-8   { columns: 8 !important; }
    .#{nth($breakpoint, 1)}columns-9   { columns: 9 !important; }
    .#{nth($breakpoint, 1)}columns-10  { columns: 10 !important; }
    .#{nth($breakpoint, 1)}columns-11  { columns: 11 !important; }
    .#{nth($breakpoint, 1)}columns-12  { columns: 12 !important; }

    :root {
        --column-gap: #{nth($breakpoint, 4)};
        --row-gap: #{nth($breakpoint, 5)};
    }
}
}
